{"meta":{"title":"赵晓亮","subtitle":"","description":"","author":"赵晓亮","url":"http://yoursite.com","root":"/"},"pages":[{"title":"分类","date":"2020-01-05T08:29:57.000Z","updated":"2020-05-12T01:20:48.000Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":"","author":"赵晓亮"},{"title":"关于我","date":"2020-01-05T08:29:40.000Z","updated":"2020-01-07T03:17:18.000Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"联系方式： 邮箱：1625754741@qq.com 暂未开放","author":"赵晓亮"},{"title":"欢迎大家留言","date":"2020-01-05T08:29:57.000Z","updated":"2020-01-06T06:11:12.000Z","comments":true,"path":"message/index.html","permalink":"http://yoursite.com/message/index.html","excerpt":"","text":"这是我自己开发的博客，欢迎所有感兴趣的朋友一起来讨论","author":"赵晓亮"}],"posts":[{"title":"移动端WEB开发之响应式布局","slug":"移动web开发之响应式布局","date":"2019-01-06T08:35:52.000Z","updated":"2019-01-10T09:06:26.000Z","comments":true,"path":"2019/01/06/移动web开发之响应式布局/","link":"","permalink":"http://yoursite.com/2019/01/06/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E4%B9%8B%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/","excerpt":"","text":"移动端WEB开发之响应式布局 1.0 响应式开发原理 1.1 响应式开发原理 就是使用媒体查询针对不同宽度的设备进行布局和样式的设置，从而适配不同设备的目的。 设备的划分情况： 小于768的为超小屏幕（手机） 768~992之间的为小屏设备（平板） 992~1200的中等屏幕（桌面显示器） 大于1200的宽屏设备（大桌面显示器） 1.2 响应式布局容器 响应式需要一个父级做为布局容器，来配合子级元素来实现变化效果。 原理就是在不同屏幕下，通过媒体查询来改变这个布局容器的大小，再改变里面子元素的排列方式和大小，从而实现不同屏幕下，看到不同的页面布局和样式变化。 父容器版心的尺寸划分 超小屏幕（手机，小于 768px）：设置宽度为 100% 小屏幕（平板，大于等于 768px）：设置宽度为 750px 中等屏幕（桌面显示器，大于等于 992px）：宽度设置为 970px 大屏幕（大桌面显示器，大于等于 1200px）：宽度设置为 1170px 但是我们也可以根据实际情况自己定义划分 2.0 bootstrap的介绍 2.1Bootstrap简介 Bootstrap 来自 Twitter（推特），是目前最受欢迎的前端框架。Bootstrap 是基于HTML、CSS 和 JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。 中文网 官网 推荐网站 框架：顾名思义就是一套架构，它有一套比较完整的网页功能解决方案，而且控制权在框架本身，有预制样式库、组件和插件。使用者要按照框架所规定的某种规范进行开发。 2.2 bootstrap优点 标准化的html+css编码规范 提供了一套简洁、直观、强悍的组件 有自己的生态圈，不断的更新迭代 让开发更简单，提高了开发的效率 2.3 版本简介 2.x.x：停止维护,兼容性好,代码不够简洁，功能不够完善。 3.x.x：目前使用最多,稳定,但是放弃了IE6-IE7。对 IE8 支持但是界面效果不好,偏向用于开发响应式布局、移动设备优先的WEB 项目。 4.x.x：最新版，目前还不是很流行 2.4bootstrap基本使用 在现阶段我们还没有接触JS相关课程，所以我们只考虑使用它的样式库。 Bootstrap 使用四步曲： 创建文件夹结构 ​ 创建 html 骨架结构 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html lang&#x3D;&quot;zh-CN&quot;&gt; &lt;head&gt; &lt;meta charset&#x3D;&quot;utf-8&quot;&gt; &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt; &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1&quot;&gt; &lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt; &lt;title&gt;Bootstrap 101 Template&lt;&#x2F;title&gt; &lt;!-- Bootstrap --&gt; &lt;link href&#x3D;&quot;css&#x2F;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt; &lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&gt; &lt;!-- WARNING: Respond.js doesn&#39;t work if you view the page via file:&#x2F;&#x2F; --&gt; &lt;!--[if lt IE 9]&gt; &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;html5shiv&#x2F;3.7.2&#x2F;html5shiv.min.js&quot;&gt;&lt;&#x2F;script&gt; &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;respond.js&#x2F;1.4.2&#x2F;respond.min.js&quot;&gt;&lt;&#x2F;script&gt; &lt;![endif]--&gt; &lt;&#x2F;head&gt; &lt;body&gt; &lt;h1&gt;你好，世界！&lt;&#x2F;h1&gt; &lt;!-- jQuery (necessary for Bootstrap&#39;s JavaScript plugins) --&gt; &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery&#x2F;1.11.3&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt; &lt;!-- Include all compiled plugins (below), or include individual files as needed --&gt; &lt;script src&#x3D;&quot;js&#x2F;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt; &lt;&#x2F;body&gt;&lt;&#x2F;html&gt; ​ 引入相关样式文件 12&lt;!-- Bootstrap 核心样式--&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;bootstrap&#x2F;css&#x2F;bootstrap.min.css&quot;&gt; ​ 书写内容 直接拿Bootstrap 预先定义好的样式来使用 修改Bootstrap 原来的样式，注意权重问题 学好Bootstrap 的关键在于知道它定义了哪些样式，以及这些样式能实现什么样的效果 2.5 bootstrap布局容器 Bootstrap 需要为页面内容和栅格系统包裹一个 .container 或者.container-fluid 容器，它提供了两个作此用处的类。 .container 响应式布局的容器 固定宽度 大屏 ( &gt;=1200px) 宽度定为 1170px 中屏 ( &gt;=992px) 宽度定为 970px 小屏 ( &gt;=768px) 宽度定为 750px 超小屏 (100%) .container-fluid 流式布局容器 百分百宽度 占据全部视口（viewport）的容器。 2.6 bootstrap栅格系统 Bootstrap提供了一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列。 栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局，你的内容就可以放入这些创建好的布局中。 按照不同屏幕划分为1~12 等份 行（row） 可以去除父容器作用15px的边距 xs-extra small：超小； sm-small：小； md-medium：中等； lg-large：大； 列（column）大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列 每一列默认有左右15像素的 padding 可以同时为一列指定多个设备的类名，以便划分不同份数 例如 class=“col-md-4 col-sm-6” 栅格嵌套 栅格系统内置的栅格系统将内容再次嵌套。简单理解就是一个列内再分成若干份小列。我们可以通过添加一个新的 .row 元素和一系列 .col-sm-* 元素到已经存在的 .col-sm-* 元素内。 1234567&lt;!-- 列嵌套 --&gt; &lt;div class&#x3D;&quot;col-sm-4&quot;&gt; &lt;div class&#x3D;&quot;row&quot;&gt; &lt;div class&#x3D;&quot;col-sm-6&quot;&gt;小列&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;col-sm-6&quot;&gt;小列&lt;&#x2F;div&gt; &lt;&#x2F;div&gt;&lt;&#x2F;div&gt; 列偏移 使用 .col-md-offset-* 类可以将列向右侧偏移。这些类实际是通过使用 * 选择器为当前元素增加了左侧的边距（margin）。 12345&lt;!-- 列偏移 --&gt; &lt;div class&#x3D;&quot;row&quot;&gt; &lt;div class&#x3D;&quot;col-lg-4&quot;&gt;1&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;col-lg-4 col-lg-offset-4&quot;&gt;2&lt;&#x2F;div&gt; &lt;&#x2F;div&gt; 列排序 通过使用 .col-md-push-* 和 .col-md-pull-* 类就可以很容易的改变列（column）的顺序。 12345&lt;!-- 列排序 --&gt; &lt;div class&#x3D;&quot;row&quot;&gt; &lt;div class&#x3D;&quot;col-lg-4 col-lg-push-8&quot;&gt;左侧&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;col-lg-8 col-lg-pull-4&quot;&gt;右侧&lt;&#x2F;div&gt; &lt;&#x2F;div&gt; 响应式工具 为了加快对移动设备友好的页面开发工作，利用媒体查询功能，并使用这些工具类可以方便的针对不同设备展示或隐藏页面内容。","categories":[{"name":"web前端布局","slug":"web前端布局","permalink":"http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"}],"tags":[],"author":"赵晓亮"},{"title":"移动web开发之rem布局","slug":"移动web开发_rem布局","date":"2019-01-04T08:35:44.000Z","updated":"2019-01-04T09:09:20.000Z","comments":true,"path":"2019/01/04/移动web开发_rem布局/","link":"","permalink":"http://yoursite.com/2019/01/04/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_rem%E5%B8%83%E5%B1%80/","excerpt":"","text":"移动web开发之rem布局 rem基础 rem单位 rem (root em)是一个相对单位，类似于em，em是父元素字体大小。 不同的是rem的基准是相对于html元素的字体大小。 比如，根元素（html）设置font-size=12px; 非根元素设置width:2rem; 则换成px表示就是24px。 12345678&#x2F;* 根html 为 12px *&#x2F;html &#123; font-size: 12px;&#125;&#x2F;* 此时 div 的字体大小就是 24px *&#x2F; div &#123; font-size: 2rem;&#125; rem的优势：父元素文字大小可能不一致， 但是整个页面只有一个html，可以很好来控制整个页面的元素大小。 媒体查询 什么是媒体查询 媒体查询（Media Query）是CSS3新语法。 使用 @media查询，可以针对不同的媒体类型定义不同的样式 @media 可以针对不同的屏幕尺寸设置不同的样式 当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面 目前针对很多苹果手机、Android手机，平板等设备都用得到多媒体查询 媒体查询语法规范 用 @media开头 注意@符号 mediatype 媒体类型 关键字 and not only media feature 媒体特性必须有小括号包含 123@media mediatype and|not|only (media feature) &#123; CSS-Code;&#125; mediatype 查询类型 ​ 将不同的终端设备划分成不同的类型，称为媒体类型 关键字 ​ 关键字将媒体类型或多个媒体特性连接到一起做为媒体查询的条件。 and：可以将多个媒体特性连接到一起，相当于“且”的意思。 not：排除某个媒体类型，相当于“非”的意思，可以省略。 only：指定某个特定的媒体类型，可以省略。 媒体特性 每种媒体类型都具体各自不同的特性，根据不同媒体类型的媒体特性设置不同的展示风格。我们暂且了解三个。 注意他们要加小括号包含 ​ 媒体查询书写规则 注意： 为了防止混乱，媒体查询我们要按照从小到大或者从大到小的顺序来写,但是我们最喜欢的还是从小到大来写，这样代码更简洁 ​ ​ less 基础 维护css弊端 CSS 是一门非程序式语言，没有变量、函数、SCOPE（作用域）等概念。 CSS 需要书写大量看似没有逻辑的代码，CSS 冗余度是比较高的。 不方便维护及扩展，不利于复用。 CSS 没有很好的计算能力 非前端开发工程师来讲，往往会因为缺少 CSS 编写经验而很难写出组织良好且易于维护的 CSS 代码项目。 Less 介绍 Less（LeanerStyle Sheets 的缩写）是一门 CSS扩展语言，也成为CSS预处理器。 做为 CSS的一种形式的扩展，它并没有减少CSS的功能，而是在现有的CSS语法上，为CSS加入程序式语言的特性。 它在CSS 的语法基础之上，引入了变量，Mixin（混入），运算以及函数等功能，大大简化了 CSS 的编写，并且降低了 CSS的维护成本，就像它的名称所说的那样，Less可以让我们用更少的代码做更多的事情。 Less中文网址：http://lesscss.cn/ 常见的CSS预处理器：Sass、Less、Stylus 一句话：Less是一门 CSS 预处理语言，它扩展了CSS的动态特性。 Less安装 ①安装nodejs，可选择版本(8.0)，网址：http://nodejs.cn/download/ ②检查是否安装成功，使用cmd命令（win10是window+r 打开运行输入cmd） —输入“node –v”查看版本即可 ③基于nodejs在线安装Less，使用cmd命令“npm install -g less”即可 ④检查是否安装成功，使用cmd命令“ lessc -v ”查看版本即可 Less 使用之变量 变量是指没有固定的值，可以改变的。因为我们CSS中的一些颜色和数值等经常使用。 1@变量名:值; 必须有@为前缀 不能包含特殊字符 不能以数字开头 大小写敏感 1@color: pink; Less 编译 vocode Less 插件 Easy LESS 插件用来把less文件编译为css文件 安装完毕插件，重新加载下 vscode。 只要保存一下Less文件，会自动生成CSS文件。 Less 嵌套 12345678910&#x2F;&#x2F; 将css改为less#header .logo &#123; width: 300px;&#125;#header &#123; .logo &#123; width: 300px; &#125;&#125; 如果遇见 （交集|伪类|伪元素选择器） ，利用&amp;进行连接 12345678a:hover&#123; color:red;&#125;a&#123; &amp;:hover&#123; color:red; &#125;&#125; Less 运算 任何数字、颜色或者变量都可以参与运算。就是Less提供了加（+）、减（-）、乘（*）、除（/）算术运算。 1234567891011&#x2F;*Less 里面写*&#x2F;@witdh: 10px + 5;div &#123; border: @witdh solid red;&#125;&#x2F;*生成的css*&#x2F;div &#123; border: 15px solid red;&#125;&#x2F;*Less 甚至还可以这样 *&#x2F;width: (@width + 5) * 2; 乘号（*）和除号（/）的写法 运算符中间左右有个空格隔开 1px + 5 对于两个不同的单位的值之间的运算，运算结果的值取第一个值的单位 如果两个值之间只有一个值有单位，则运算结果就取该单位 rem适配方案 1.让一些不能等比自适应的元素，达到当设备尺寸发生改变的时候，等比例适配当前设备。 2.使用媒体查询根据不同设备按比例设置html的字体大小，然后页面元素使用rem做尺寸单位，当html字体大小变化元素尺寸也会发生变化，从而达到等比缩放的适配。 技术方案： 1.less+rem+媒体查询 2.lflexible.js+rem 总结： 两种方案现在都存在。 方案2 更简单，现阶段大家无需了解里面的js代码。 rem实际开发适配方案1 ①假设设计稿是750px ②假设我们把整个屏幕划分为15等份（划分标准不一可以是20份也可以是10等份） ③每一份作为html字体大小，这里就是50px ④那么在320px设备的时候，字体大小为320/15就是 21.33px ⑤用我们页面元素的大小除以不同的 html字体大小会发现他们比例还是相同的 ⑥比如我们以750为标准设计稿 ⑦一个100100像素的页面元素在 750屏幕下， 就是 100/ 50 转换为rem 是 2rem2rem 比例是1比1 ⑧320屏幕下， html字体大小为21.33 则 2rem= 42.66px 此时宽和高都是 42.66 但是宽和高的比例还是 1比1 ⑨但是已经能实现不同屏幕下 页面元素盒子等比例缩放的效果 总结： ①最后的公式：页面元素的rem值 = 页面元素值（px） / （屏幕宽度 / 划分的份数） ②屏幕宽度/划分的份数就是 htmlfont-size 的大小 ③或者：页面元素的rem值 = 页面元素值（px） / html font-size 字体大小 苏宁首页 苏宁首页地址 ：苏宁首页 1、 技术选型 方案：我们采取单独制作移动页面方案 技术：布局采取rem适配布局（less + rem + 媒体查询） 设计图： 本设计图采用 750px 设计尺寸 2、搭建文件结构 3、设置视口标签以及引入初始化样式 123&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, user-scalable&#x3D;no, initial-scale&#x3D;1.0, maximum-scale&#x3D;1.0, minimum-scale&#x3D;1.0&quot;&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;normalize.css&quot;&gt; 4、设置公共common.less文件 新建common.less 设置好最常见的屏幕尺寸，利用媒体查询设置不同的html字体大小，因为除了首页其他页面也需要 我们关心的尺寸有 320px、360px、375px、384px、400px、414px、424px、480px、540px、720px、750px 划分的份数我们定为 15等份 因为我们pc端也可以打开我们苏宁移动端首页，我们默认html字体大小为 50px，注意这句话写到最上面 rem 适配方案2 手机淘宝团队出的简洁高效 移动端适配库 我们再也不需要在写不同屏幕的媒体查询，因为里面js做了处理 它的原理是把当前设备划分为10等份，但是不同设备下，比例还是一致的。 我们要做的，就是确定好我们当前设备的html 文字大小就可以了 比如当前设计稿是 750px， 那么我们只需要把 html 文字大小设置为 75px(750px / 10) 就可以 里面页面元素rem值： 页面元素的px 值 / 75 剩余的，让flexible.js来去算 github地址：https://github.com/amfe/lib-flexible 总结： 因为flexible是默认将屏幕分为10等分 但是当屏幕大于750的时候希望不要再去重置html字体了 所以要自己通过媒体查询设置一下 并且要把权重提到最高 VSCode px 转换rem 插件 cssrem 因为cssrem中css自动转化为rem是参照默认插件的16转换的所以需要自己配置","categories":[{"name":"web前端布局","slug":"web前端布局","permalink":"http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"}],"tags":[],"author":"赵晓亮"},{"title":"移动web开发——flex布局","slug":"移动web开发_flex布局","date":"2018-10-17T10:42:11.000Z","updated":"2018-10-18T09:10:37.000Z","comments":true,"path":"2018/10/17/移动web开发_flex布局/","link":"","permalink":"http://yoursite.com/2018/10/17/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_flex%E5%B8%83%E5%B1%80/","excerpt":"","text":"移动web开发——flex布局 1.0传统布局和flex布局对比 1.1传统布局 兼容性好 布局繁琐 局限性，不能再移动端很好的布局 1.2 flex布局 操作方便，布局极其简单，移动端使用比较广泛 pc端浏览器支持情况比较差 IE11或更低版本不支持flex或仅支持部分 1.3 建议 如果是pc端页面布局，还是采用传统方式 如果是移动端或者是不考虑兼容的pc则采用flex 2.0 flex布局原理 flex 是 flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为 flex 布局。 当我们为父盒子设为 flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效。 flex布局又叫伸缩布局 、弹性布局 、伸缩盒布局 、弹性盒布局 采用 Flex 布局的元素，称为 Flex 容器（flex container），简称&quot;容器&quot;。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称&quot;项目&quot;。 总结：就是通过给父盒子添加flex属性，来控制子盒子的位置和排列方式 3.0 父项常见属性 flex-direction：设置主轴的方向 justify-content：设置主轴上的子元素排列方式 flex-wrap：设置子元素是否换行 align-content：设置侧轴上的子元素的排列方式（多行） align-items：设置侧轴上的子元素排列方式（单行） flex-flow：复合属性，相当于同时设置了 flex-direction 和 flex-wrap 3.1 flex-direction设置主轴的方向 在 flex 布局中，是分为主轴和侧轴两个方向，同样的叫法有 ： 行和列、x 轴和y 轴 默认主轴方向就是 x 轴方向，水平向右 默认侧轴方向就是 y 轴方向，水平向下 注意： 主轴和侧轴是会变化的，就看 flex-direction 设置谁为主轴，剩下的就是侧轴。而我们的子元素是跟着主轴来排列的 ​ 3.2 justify-content 设置主轴上的子元素排列方式 3.3 flex-wrap设置是否换行 默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，flex布局中默认是不换行的。 nowrap 不换行 wrap 换行 3.4 align-items 设置侧轴上的子元素排列方式（单行 ） 该属性是控制子项在侧轴（默认是y轴）上的排列方式 在子项为单项（单行）的时候使用 flex-start 从头部开始 flex-end 从尾部开始 center 居中显示 stretch 拉伸 3.5 align-content 设置侧轴上的子元素的排列方式（多行） 设置子项在侧轴上的排列方式 并且只能用于子项出现 换行 的情况（多行），在单行下是没有效果的。 3.6 align-content 和align-items区别 align-items 适用于单行情况下， 只有上对齐、下对齐、居中和 拉伸 align-content适应于换行（多行）的情况下（单行情况下无效）， 可以设置 上对齐、下对齐、居中、拉伸以及平均分配剩余空间等属性值。 总结就是单行找align-items 多行找 align-content 3.7 flex-flow 属性是 flex-direction 和 flex-wrap 属性的复合属性 1flex-flow:row wrap; 4.0 flex布局子项常见属性 flex子项目占的份数 align-self控制子项自己在侧轴的排列方式 order属性定义子项的排列顺序（前后顺序） 4.1 flex 属性 flex 属性定义子项目分配剩余空间，用flex来表示占多少份数。 123.item &#123; flex: &lt;number&gt;; &#x2F;* 默认值 0 *&#x2F;&#125; 4.2 align-self控制子项自己在侧轴上的排列方式 align-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。 默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。 1234span:nth-child(2) &#123; &#x2F;* 设置自己在侧轴上的排列方式 *&#x2F; align-self: flex-end;&#125; 4.3 order 属性定义项目的排列顺序 数值越小，排列越靠前，默认为0。 注意：和 z-index 不一样。 123.item &#123; order: &lt;number&gt;;&#125;","categories":[{"name":"web前端布局","slug":"web前端布局","permalink":"http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"}],"tags":[],"author":"赵晓亮"},{"title":"移动web开发流式布局","slug":"移动web开发_流式布局","date":"2018-10-10T10:42:11.000Z","updated":"2018-10-11T02:53:34.000Z","comments":true,"path":"2018/10/10/移动web开发_流式布局/","link":"","permalink":"http://yoursite.com/2018/10/10/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_%E6%B5%81%E5%BC%8F%E5%B8%83%E5%B1%80/","excerpt":"","text":"移动web开发流式布局 1.0 移动端基础 1.1浏览器现状 PC端常见浏览器：360浏览器、谷歌浏览器、火狐浏览器、QQ浏览器、百度浏览器、搜狗浏览器、IE浏览器。 移动端常见浏览器：UC浏览器，QQ浏览器，欧朋浏览器，百度手机浏览器，360安全浏览器，谷歌浏览器，搜狗手机浏览器，猎豹浏览器，以及其他杂牌浏览器。 国内的UC和QQ，百度等手机浏览器都是根据Webkit修改过来的内核，国内尚无自主研发的内核，就像国内的手机操作系统都是基于Android修改开发的一样。 总结：兼容移动端主流浏览器，处理Webkit内核浏览器即可。 1.2 手机屏幕的现状 移动端设备屏幕尺寸非常多，碎片化严重。 Android设备有多种分辨率：480x800, 480x854, 540x960, 720x1280，1080x1920等，还有传说中的2K，4k屏。 近年来iPhone的碎片化也加剧了，其设备的主要分辨率有：640x960, 640x1136, 750x1334, 1242x2208等。 作为开发者无需关注这些分辨率，因为我们常用的尺寸单位是 px 。 1.3常见移动端屏幕尺寸 1.4移动端调试方法 Chrome DevTools（谷歌浏览器）的模拟手机调试 搭建本地web服务器，手机和服务器一个局域网内，通过手机访问服务器 使用外网服务器，直接IP或域名访问 2.0 视口 视口（viewport）就是浏览器显示页面内容的屏幕区域。 视口可以分为布局视口、视觉视口和理想视口 2.1 布局视口 layout viewport 一般移动设备的浏览器都默认设置了一个布局视口，用于解决早期的PC端页面在手机上显示的问题。 iOS, Android基本都将这个视口分辨率设置为 980px，所以PC上的网页大多都能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页。 2.2视觉视口 visual viewport 字面意思，它是用户正在看到的网站的区域。注意：是网站的区域。 我们可以通过缩放去操作视觉视口，但不会影响布局视口，布局视口仍保持原来的宽度。 2.3理想视口 ideal viewport 为了使网站在移动端有最理想的浏览和阅读宽度而设定 理想视口，对设备来讲，是最理想的视口尺寸 需要手动添写meta视口标签通知浏览器操作 meta视口标签的主要目的：布局视口的宽度应该与理想视口的宽度一致，简单理解就是设备有多宽，我们布局的视口就多宽 总结：我们开发最终会用理想视口，而理想视口就是将布局视口的宽度修改为视觉视口 2.4meta标签 最标准的viewport设置 视口宽度和设备保持一致 视口的默认缩放比例1.0 不允许用户自行缩放 最大允许的缩放比例1.0 最小允许的缩放比例1.0 3.0二倍图 3.1物理像素&amp;物理像素比 物理像素点指的是屏幕显示的最小颗粒，是物理真实存在的。这是厂商在出厂时就设置好了,比如苹果6 是 750* 1334 我们开发时候的1px 不是一定等于1个物理像素的 一个px的能显示的物理像素点的个数，称为物理像素比或屏幕像素比 如果把1张100*100的图片放到手机里面会按照物理像素比给我们缩放 lRetina（视网膜屏幕）是一种显示技术，可以将把更多的物理像素点压缩至一块屏幕里，从而达到更高的分辨率，并提高屏幕显示的细腻程度。 对于一张 50px * 50px 的图片,在手机或 Retina 屏中打开，按照刚才的物理像素比会放大倍数，这样会造成图片模糊 在标准的viewport设置中，使用倍图来提高图片质量，解决在高清设备中的模糊问题 通常使用二倍图， 因为iPhone 6 的影响背景图片 注意缩放问题 3.2背景缩放background-size background-size 属性规定背景图像的尺寸 1background-size: 背景图片宽度 背景图片高度; 单位： 长度|百分比|cover|contain; cover把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。 contain把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域 4.0 移动开发选择和技术解决方案 4.1移动端主流方案 1.单独制作移动端页面（主流） 通常情况下，网址域名前面加 m(mobile) 可以打开移动端。通过判断设备，如果是移动设备打开，则跳到移动端页面。 也就是说，PC端和移动端为两套网站，pc端是pc断的样式，移动端在写一套，专门针对移动端适配的一套网站 京东pc端： 京东移动端： 2.响应式页面兼容移动端（其次） 响应式网站：即pc和移动端共用一套网站，只不过在不同屏幕下，样式会自动适配 4.2 移动端技术解决方案 1.移动端浏览器兼容问题 移动端浏览器基本以 webkit 内核为主，因此我们就考虑webkit兼容性问题。 我们可以放心使用 H5 标签和 CSS3 样式。 同时我们浏览器的私有前缀我们只需要考虑添加 webkit 即可 2.移动端公共样式 移动端 CSS 初始化推荐使用 normalize.css/ Normalize.css：保护了有价值的默认值 Normalize.css：修复了浏览器的bug Normalize.css：是模块化的 Normalize.css：拥有详细的文档 官网地址： http://necolas.github.io/normalize.css/ 4.3 移动端大量使用 CSS3盒子模型box-sizin 传统模式宽度计算：盒子的宽度 = CSS中设置的width + border + padding CSS3盒子模型： 盒子的宽度= CSS中设置的宽度width 里面包含了 border 和 padding 也就是说，我们的CSS3中的盒子模型， padding 和 border 不会撑大盒子了 1234&#x2F;*CSS3盒子模型*&#x2F;box-sizing: border-box;&#x2F;*传统盒子模型*&#x2F;box-sizing: content-box; 移动端可以全部CSS3 盒子模型 PC端如果完全需要兼容，我们就用传统模式，如果不考虑兼容性，我们就选择 CSS3 盒子模型 4.4移动端特殊样式 123456789&#x2F;*CSS3盒子模型*&#x2F;box-sizing: border-box;-webkit-box-sizing: border-box;&#x2F;*点击高亮我们需要清除清除 设置为transparent 完成透明*&#x2F;-webkit-tap-highlight-color: transparent;&#x2F;*在移动端浏览器默认的外观在iOS上加上这个属性才能给按钮和输入框自定义样式*&#x2F;-webkit-appearance: none;&#x2F;*禁用长按页面时的弹出菜单*&#x2F;img,a &#123; -webkit-touch-callout: none; &#125; 5.0移动端常见布局 移动端单独制作 流式布局（百分比布局） flex 弹性布局（强烈推荐） less+rem+媒体查询布局 混合布局 响应式 媒体查询 bootstarp 流式布局： 流式布局，就是百分比布局，也称非固定像素布局。 通过盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。 流式布局方式是移动web开发使用的比较常见的布局方式。","categories":[{"name":"web前端布局","slug":"web前端布局","permalink":"http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"}],"tags":[],"author":"赵晓亮"},{"title":"HTML列表与表单","slug":"05-列表和表单","date":"2018-02-03T08:36:49.000Z","updated":"2018-02-03T09:47:59.000Z","comments":true,"path":"2018/02/03/05-列表和表单/","link":"","permalink":"http://yoursite.com/2018/02/03/05-%E5%88%97%E8%A1%A8%E5%92%8C%E8%A1%A8%E5%8D%95/","excerpt":"","text":"1. 列表标签（重点） 学习目标 理解 无序列表的应用场景 自定义列表的应用场景 应用 无序列表语法 自定义列表语法 问？ 前面我们知道表格一般用于数据展示的，但是网页中还是有很多跟表格类似的布局，如下图~~ 我们用什么做呢？ 答： 答案是列表， 那什么是列表？ 表格是用来显示数据的，那么列表就是用来布局的。 因为非常整齐和自由 概念： 容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表 特点： 列表最大的特点就是 整齐 、整洁、 有序，跟表格类似，但是他可组合自由度会更高。 1.1 无序列表 ul （重点） 无序列表的各个列表项之间没有顺序级别之分，是并列的。其基本语法格式如下： 123456&lt;ul&gt; &lt;li&gt;列表项1&lt;/li&gt; &lt;li&gt;列表项2&lt;/li&gt; &lt;li&gt;列表项3&lt;/li&gt; ......&lt;/ul&gt; 比如下面这些，新闻是没有顺序的，不用排队，先到先得，后发布先显示。 脚下留心： 1231. &lt;ul&gt;&lt;&#x2F;ul&gt;中只能嵌套&lt;li&gt;&lt;&#x2F;li&gt;，直接在&lt;ul&gt;&lt;&#x2F;ul&gt;标签中输入其他标签或者文字的做法是不被允许的。2. &lt;li&gt;与&lt;&#x2F;li&gt;之间相当于一个容器，可以容纳所有元素。3. 无序列表会带有自己样式属性，放下那个样式，一会让CSS来！ 1.2 有序列表 ol （了解） 有序列表即为有排列顺序的列表，其各个列表项按照一定的顺序排列定义，有序列表的基本语法格式如下： 123456&lt;ol&gt; &lt;li&gt;列表项1&lt;/li&gt; &lt;li&gt;列表项2&lt;/li&gt; &lt;li&gt;列表项3&lt;/li&gt; ......&lt;/ol&gt; 所有特性基本与ul 一致。 但是实际中比 无序列表 用的少很多。 1.3 自定义列表（理解） 定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。其基本语法如下： 12345678910&lt;dl&gt; &lt;dt&gt;名词1&lt;/dt&gt; &lt;dd&gt;名词1解释1&lt;/dd&gt; &lt;dd&gt;名词1解释2&lt;/dd&gt; ... &lt;dt&gt;名词2&lt;/dt&gt; &lt;dd&gt;名词2解释1&lt;/dd&gt; &lt;dd&gt;名词2解释2&lt;/dd&gt; ...&lt;/dl&gt; 用的还可以： 1.4 列表总结 标签名 定义 说明 无序标签 里面只能包含li 没有顺序，我们以后布局中最常用的列表 有序标签 里面只能包含li 有顺序， 使用情况较少 自定义列表 里面有2个兄弟， dt 和 dd 我们现在还没有学布局，现在只要保证2个点： 学会什么时候用无序列表， 学会什么时候用自定义列表 无序列表和自定义列表代码怎么写？ 具体的我们刚才看的布局，等我们学了css 在来全面布局。 2. 表单标签(掌握) 目标： 能写出最常用的注册类表单 能说出input表单常见属性 现实中的表单，类似我们去银行办理信用卡填写的单子。 如下图 **作用： ** 表单目的是为了收集用户信息。 在我们网页中， 我们也需要跟用户进行交互，收集用户资料，此时也需要表单。 在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。 **表单控件： ** ​ 包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。 提示信息： ​ 一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。 表单域： ​ 他相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。 2.1 input 控件(重点) 语法： 1&lt;input type=\"属性值\" value=\"你好\"&gt; input 输入的意思 &lt;input /&gt;标签为单标签 type属性设置不同的属性值用来指定不同的控件类型 除了type属性还有别的属性 常用属性： 1. type 属性 这个属性通过改变值，可以决定了你属于那种input表单。 比如 type = ‘text’ 就表示 文本框 可以做 用户名， 昵称等。 比如 type = ‘password’ 就是表示密码框 用户输入的内容 是不可见的。 12用户名: &lt;input type=\"text\" /&gt; 密 码：&lt;input type=\"password\" /&gt; 2. value属性 值 1用户名:&lt;input type=\"text\" name=\"username\" value=\"请输入用户名\"&gt; value 默认的文本值。 有些表单想刚打开页面就默认显示几个文字，就可以通过这个value 来设置。 3. name属性 1用户名:&lt;input type=\"text\" name=“username” /&gt; name表单的名字， 这样，后台可以通过这个name属性找到这个表单。 页面中的表单很多，name主要作用就是用于区别不同的表单。 name属性后面的值，是我们自己定义的。 radio 如果是一组，我们必须给他们命名相同的名字 name 这样就可以多个选其中的一个啦 12&lt;input type=\"radio\" name=\"sex\" /&gt;男&lt;input type=\"radio\" name=\"sex\" /&gt;女 name属性，我们现在用的较少， 但是，当我们学ajax 和后台的时候，是必须的。 4. checked属性 表示默认选中状态。 较常见于 单选按钮和复选按钮。 123性 别:&lt;input type=\"radio\" name=\"sex\" value=\"男\" checked=\"checked\" /&gt;男&lt;input type=\"radio\" name=\"sex\" value=\"女\" /&gt;女 上面这个，表示就默认选中了 男 这个单选按钮 5. input 属性小结 属性 说明 作用 type 表单类型 用来指定不同的控件类型 value 表单值 表单里面默认显示的文本 name 表单名字 页面中的表单很多，name主要作用就是用于区别不同的表单。 checked 默认选中 表示那个单选或者复选按钮一开始就被选中了 2.2 label标签(理解) 目标： label标签主要目的是为了提高用户体验。 为用户提高最优秀的服务。 概念： label 标签为 input 元素定义标注（标签）。 作用： 用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点。 如何绑定元素呢？ 第一种用法就是用label直接包括input表单。 1&lt;label&gt; 用户名： &lt;input type=\"radio\" name=\"usename\" value=\"请输入用户名\"&gt; &lt;/label&gt; 适合单个表单选择 第二种用法 for 属性规定 label 与哪个表单元素绑定。 12&lt;label for=\"sex\"&gt;男&lt;/label&gt;&lt;input type=\"radio\" name=\"sex\" id=\"sex\"&gt; 当我们鼠标点击 label标签里面的文字时， 光标会定位到指定的表单里面 2.3 textarea控件(文本域) 语法： 123&lt;textarea &gt; 文本内容&lt;/textarea&gt; 作用： 通过textarea控件可以轻松地创建多行文本输入框. cols=“每行中的字符数” rows=“显示的行数” 我们实际开发不用 文本框和文本域区别 表单 名称 区别 默认值显示 用于场景 input type=“text” 文本框 只能显示一行文本 单标签，通过value显示默认值 用户名、昵称、密码等 textarea 文本域 可以显示多行文本 双标签，默认值写到标签中间 留言板 2.4 select下拉列表 目的： 如果有多个选项让用户选择，为了节约空间，我们可以使用select控件定义下拉列表. 语法： 123456&lt;select&gt; &lt;option&gt;选项1&lt;/option&gt; &lt;option&gt;选项2&lt;/option&gt; &lt;option&gt;选项3&lt;/option&gt; ...&lt;/select&gt; 注意： &lt;select&gt; 中至少包含一对 option 在option 中定义selected =&quot; selected &quot;时，当前项即为默认选中项。 但是我们实际开发会用的比较少 3. form表单域 收集的用户信息怎么传递给服务器？ 通过form表单域 目的： 在HTML中，form标签被用于定义表单域，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。 **语法: ** 123&lt;form action=\"url地址\" method=\"提交方式\" name=\"表单名称\"&gt; 各种表单控件&lt;/form&gt; 常用属性： 属性 属性值 作用 action url地址 用于指定接收并处理表单数据的服务器程序的url地址。 method get/post 用于设置表单数据的提交方式，其取值为get或post。 name 名称 用于指定表单的名称，以区分同一个页面中的多个表单。 注意: 每个表单都应该有自己表单域。我们现在做页面，不写看不到效果，但是 如果后面学 ajax 后台交互的时候，必须需要 form表单域。 2.6 团队约定 元素属性 元素属性值使用双引号语法 元素属性值可以写上的都写上 推荐： 12&lt;input type=\"text\" /&gt; &lt;input type=\"radio\" name=\"name\" checked=\"checked\" /&gt; 不推荐： 123&lt;input type=text /&gt; &lt;input type='text' /&gt; &lt;input type=\"radio\" name=\"name\" checked /&gt; 4.综合案例（注册页面） 5. 查文档 经常查阅文档是一个非常好的学习习惯。 W3C : http://www.w3school.com.cn/ MDN: https://developer.mozilla.org/zh-CN/ 6. 总结","categories":[{"name":"html基础","slug":"html基础","permalink":"http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"}],"tags":[],"author":"赵晓亮"},{"title":"HTML表格","slug":"04-表格 table(会使用)","date":"2018-01-26T08:36:49.000Z","updated":"2018-01-26T09:46:46.000Z","comments":true,"path":"2018/01/26/04-表格 table(会使用)/","link":"","permalink":"http://yoursite.com/2018/01/26/04-%E8%A1%A8%E6%A0%BC%20table(%E4%BC%9A%E4%BD%BF%E7%94%A8)/","excerpt":"","text":"表格 table(会使用) 目标： 理解： 能说出表格用来做什么的 表格的基本结构组成 应用： 能够熟练写出n行n列的表格 能简单的合并单元格 ​ 表格作用： 存在即是合理的。 表格的现在还是较为常用的一种标签，但不是用来布局，常见显示、展示表格式数据。 因为它可以让数据显示的非常的规整，可读性非常好。 特别是后台展示数据的时候表格运用是否熟练就显得很重要，一个清爽简约的表格能够把繁杂的数据表现得很有条理，虽然 div 布局也可以做到，但是总没有表格来得方便。 ps: 这些地方用表格，你会觉得生活还是那么美好。。。。忍不住想说 PPAP i hava a pen 1. 创建表格 在HTML网页中，要想创建表格，就需要使用表格相关的标签。 创建表格的基本语法： 1234567&lt;table&gt; &lt;tr&gt; &lt;td&gt;单元格内的文字&lt;/td&gt; ... &lt;/tr&gt; ...&lt;/table&gt; 要深刻体会表格、行、单元格他们的构成。 在上面的语法中包含基本的三对HTML标签，分别为 table、tr、td，他们是创建表格的基本标签，缺一不可，下面对他们进行具体地解释 table用于定义一个表格标签。 tr标签 用于定义表格中的行，必须嵌套在 table标签中。 td 用于定义表格中的单元格，必须嵌套在标签中。 字母 td 指表格数据（table data），即数据单元格的内容，现在我们明白，表格最合适的地方就是用来存储数据的。 ​ **总结： ** 表格的主要目的是用来显示特殊数据的 一个完整的表格有表格标签（table），行标签（tr），单元格标签（td）组成，没有列的标签 中只能嵌套 类的单元格 标签，他就像一个容器，可以容纳所有的元素 2. 表格属性 表格有部分属性我们不常用，这里重点记住 cellspacing 、 cellpadding。 我们经常有个说法，是三参为0， 平时开发的我们这三个参数 border cellpadding cellspacing 为 0 案例1： 12345678&lt;table width=\"500\" height=\"300\" border=\"1\" cellpadding=\"20\" cellspacing=\"0\" align=\"center\"&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;刘德华&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;55&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;郭富城&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;52&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张学友&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;58&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;黎明&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;18&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;刘晓庆&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;td&gt;63&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 3. 表头单元格标签th 作用： 一般表头单元格位于表格的第一行或第一列，并且文本加粗居中 语法： 只需用表头标签&lt;th&gt;&lt;/th&gt;替代相应的单元格标签&lt;td&gt;&lt;/td&gt;即可。 案例2： ​ 效果图 ​ 代码： 1234567891011121314151617&lt;table width=\"500\" border=\"1\" align=\"center\" cellspacing=\"0\" cellpadding=\"0\"&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;电话&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;小王&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;td&gt;110&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;小明&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;120&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; th 也是一个单元格 只不过和普通的 td单元格不一样，它会让自己里面的文字居中且加粗 4. 表格标题caption 定义和用法 123&lt;table&gt; &lt;caption&gt;我是表格标题&lt;/caption&gt;&lt;/table&gt; **注意： ** caption 元素定义表格标题，通常这个标题会被居中且显示于表格之上。 caption 标签必须紧随 table 标签之后。 这个标签只存在 表格里面才有意义。你是风儿我是沙 案例3： 根据要求完成以下案例： 5. 合并单元格(难点) 合并单元格是我们比较常用的一个操作，但是不会合并的很复杂。 5.1 合并单元格2种方式 跨行合并：rowspan=“合并单元格的个数” 跨列合并：colspan=“合并单元格的个数” 5.2 合并单元格顺序 **合并的顺序我们按照 先上 后下 先左 后右 的顺序 ** 跟我们以前学习汉字的书写顺序完全一致。 5.3 合并单元格三步曲 先确定是跨行还是跨列合并 根据 先上 后下 先左 后右的原则找到目标单元格 然后写上 合并方式 还有 要合并的单元格数量 比如 ： 删除多余的单元格 单元格 6. 总结表格 标签名 定义 说明 表格标签 就是一个四方的盒子 表格行标签 行标签要再table标签内部才有意义 单元格标签 单元格标签是个容器级元素，可以放任何东西 表头单元格标签 它还是一个单元格，但是里面的文字会居中且加粗 表格标题标签 表格的标题，跟着表格一起走，和表格居中对齐 clospan 和 rowspan 合并属性 用来合并单元格的 表格提供了HTML 中定义表格式数据的方法。 表格中由行中的单元格组成。 表格中没有列元素，列的个数取决于行的单元格个数。 表格不要纠结于外观，那是CSS 的作用。 表格的学习要求： 能手写表格结构，并且能简单合并单元格。 7. 拓展阅读@ 表格划分结构（了解） 1对于比较复杂的表格，表格的结构也就相对的复杂了，所以又将表格分割成三个部分：题头、正文和脚注。而这三部分分别用:thead,tbody,tfoot来标注， 这样更好的分清表格结构 注意： ：用于定义表格的头部。用来放标题之类的东西。 内部必须拥有 标签！ ：用于定义表格的主体。放数据本体 。 放表格的脚注之类。 以上标签都是放到table标签中。","categories":[{"name":"html基础","slug":"html基础","permalink":"http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"}],"tags":[],"author":"赵晓亮"},{"title":"HTML常用标签","slug":"03-HTML常用标签","date":"2018-01-14T08:36:49.000Z","updated":"2018-01-14T09:57:14.000Z","comments":true,"path":"2018/01/14/03-HTML常用标签/","link":"","permalink":"http://yoursite.com/2018/01/14/03-HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/","excerpt":"","text":"1. HTML常用标签 首先 HTML和CSS是两种完全不同的语言，我们学的是结构，就只写HTML标签，认识标签就可以了。 不会再给结构标签指定样式了。 HTML标签有很多，这里我们学习最为常用的，后面有些较少用的，我们可以查下手册就可以了。 1.1 排版标签 排版标签主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。 1）标题标签h (熟记) 单词缩写： head 头部. 标题 title 文档标题 为了使网页更具有语义化，我们经常会在页面中用到标题标签，HTML提供了6个等级的标题，即 标题标签语义： 作为标题使用，并且依据重要性递减 其基本语法格式如下： 123456&lt;h1&gt; 标题文本 &lt;/h1&gt;&lt;h2&gt; 标题文本 &lt;/h2&gt;&lt;h3&gt; 标题文本 &lt;/h3&gt;&lt;h4&gt; 标题文本 &lt;/h4&gt;&lt;h5&gt; 标题文本 &lt;/h5&gt;&lt;h6&gt; 标题文本 &lt;/h6&gt; 显示效果如下： 小结 : 加了标题的文字会变的加粗，字号也会依次变大 一行是只能放一个标题的 2）段落标签p ( 熟记) 单词缩写： paragraph 段落 [ˈpærəgræf] 无须记这个单词 作用语义： 可以把 HTML 文档分割为若干段落 在网页中要把文字有条理地显示出来，离不开段落标签，就如同我们平常写文章一样，整个网页也可以分为若干个段落，而段落的标签就是 1&lt;p&gt; 文本内容 &lt;/p&gt; 是HTML文档中最常见的标签，默认情况下，文本在一个段落中会根据浏览器窗口的大小自动换行。 3）水平线标签hr(认识) 单词缩写： horizontal 横线 [ˌhɔrəˈzɑntl] 同上 在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标签来完成，就是创建横跨网页水平线的标签。其基本语法格式如下： 1&lt;hr /&gt;是单标签 在网页中显示默认样式的水平线。 练习:新闻页面 4）换行标签br (熟记) 单词缩写： break 打断 ,换行 在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后自动换行。如果希望某段文本强制换行显示，就需要使用换行标签 1&lt;br /&gt; 这时如果还像在word中直接敲回车键换行就不起作用了。 此处有练习题 5）div 和 span标签(重点) div span 是没有语义的 是我们网页布局主要的2个盒子 想必你听过 css+div div 就是 division 的缩写 分割， 分区的意思 其实有很多div 来组合网页。 span 跨度，跨距；范围 语法格式： 1&lt;div&gt; 这是头部 &lt;/div&gt; &lt;span&gt;今日价格&lt;/span&gt; 他们两个都是盒子，用来装我们网页元素的， 只不过他们有区别，现在我们记住 div标签 用来布局的，但是现在一行只能放一个div span标签 用来布局的，一行上可以放好多个span 后面后面讲显示模式的时候，会告诉大家 排版标签总结 标签名 定义 说明 标题标签 作为标题使用，并且依据重要性递减 段落标签 可以把 HTML 文档分割为若干段落 水平线标签 没啥可说的，就是一条线 换行标签 div标签 用来布局的，但是现在一行只能放一个div span标签 用来布局的，一行上可以放好多个span 1.2 文本格式化标签(熟记) 在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。 区别： b 只是加粗 strong 除了可以加粗还有 强调的意思， 语义更强烈。 剩下的同理… 1.3 标签属性 所谓属性就是外在特性 比如 手机的颜色 手机的尺寸 ，总结就是手机的。。 手机的颜色是黑色 手机的尺寸是 8寸 水平线的长度是 200 图片的宽度 是 300 使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下： 12&lt;标签名 属性1=\"属性值1\" 属性2=\"属性值2\" …&gt; 内容 &lt;/标签名&gt;&lt;手机 颜色=\"红色\" 大小=\"5寸\"&gt; &lt;/手机&gt; 提倡： 尽量不使用 样式属性。 1.4 图像标签img (重点) 单词缩写： image 图像 要想在网页中显示图像就需要使用图像标签，接下来将详细介绍图像标签以及和他相关的属性。（它是一个单身狗） 语法如下： 1&lt;img src=\"图像URL\" /&gt; 该语法中src属性用于指定图像文件的路径和文件名，他是img标签的必需属性。 border 后面我们会用css来做，这里就记住这个border 单词就好了 **注意: ** 标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。 属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。 任何标签的属性都有默认值，省略该属性则取默认值。 采取 键值对 的格式 key=“value” 的格式 比如: 12345678正常的&lt;br /&gt; &lt;img src=\"cz.jpg\" width=\"300\" height=\"300\" /&gt;&lt;br /&gt; 带有边框的&lt;br /&gt; &lt;img src=\"cz.jpg\" width=\"300\" height=\"300\" border=\"3\" /&gt;&lt;br /&gt;有提示文本的&lt;br /&gt;&lt;img src=\"cz.jpg\" width=\"300\" height=\"300\" border=\"3\" title=\"这是个小蒲公英\" /&gt;&lt;br /&gt;有替换文本的&lt;br /&gt;&lt;img src=\"cz.jpg\" width=\"300\" height=\"300\" border=\"3\" alt=\"图片不存在\" /&gt; 此处有练习题 重点掌握点： [ ] 请说出 图像标签那个属性是必须要写的？ img src 图片的路径 [ ] 请说出 图像标签中 alt 和 title 属性区别？ alt 图片显示不出，文字就显示 title 鼠标经过图片的时候显示文字 1.5 链接标签(重点) 单词缩写： anchor 的缩写 [ˈæŋkə®] 。基本解释 锚, 铁锚 的 在HTML中创建超链接非常简单，只需用标签把文字包括起来就好。 语法格式： 1&lt;a href=\"跳转目标\" target=\"目标窗口的弹出方式\"&gt;文本或图像&lt;/a&gt; 属性 作用 href 用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能 target 用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，_blank为在新窗口中打开方式。 注意： 外部链接 需要添加 http:// www.baidu.com 内部链接 直接链接内部页面名称即可 比如 &lt; a href=“index.html”&gt; 首页 如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href=&quot;#&quot;)，表示该链接暂时为一个空链接。 不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。 重点掌握点： [ ] 请说出 链接标签那个属性是必须要写的？ href [ ] 请说出 如何新窗口打开这个一个链接网页的？ target=“_blank” 1.6 注释标签 在HTML中还有一种特殊的标签——注释标签。如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。 简单解释： 注释内容不会显示在浏览器窗口中，但是作为HTML文档内容的一部分，也会被下载到用户的计算机上，查看源代码时就可以看到。 语法格式： 1&lt;!-- 注释语句 --&gt; 快捷键是： ctrl + / 或者 ctrl +shift + / 注释重要性： 注释是给人看的，目的是为了更好的解释这部分代码是干啥的， 程序是不执行这个代码的 团队约定 一般用于简单的描述，如某些状态描述、属性描述等 注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行 推荐： 12&lt;!-- Comment Text --&gt;&lt;div&gt;...&lt;&#x2F;div&gt; 不推荐： 12345&lt;div&gt;...&lt;&#x2F;div&gt;&lt;!-- Comment Text --&gt; &lt;div&gt;&lt;!-- Comment Text --&gt; ...&lt;&#x2F;div&gt; 2. 路径(重点、难点) 实际工作中，我们的文件不能随便乱放，否则用起来很难快速的找到他们，因此我们需要一个文件夹来管理他们。 **目录文件夹： ** 就是普通文件夹，里面只不过存放了我们做页面所需要的 相关素材，比如 html文件， 图片 等等。 **根目录 ** 打开目录文件夹的第一层 就是 根目录 页面中的图片会非常多， 通常我们再新建一个文件夹专门用于存放图像文件（images），这时再插入图像，就需要采用“路径”的方式来指定图像文件的位置。路径可以分为： 相对路径和绝对路径 相对路径 以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。 路径分类 符号 说明 同一级路径 只需输入图像文件的名称即可，如&lt;img src=“baidu.gif” /&gt;。 下一级路径 “/” 图像文件位于HTML文件同级文件夹下（例如文件夹名称为：images） 如&lt;img src=“images/baidu.gif” /&gt;。 上一级路径 “…/” 在文件名之前加入“…/” ，如果是上两级，则需要使用 “…/ …/”，以此类推， 如&lt;img src=&quot;…/baidu.gif&quot; /&gt;。 相对路径，是从代码所在的这个文件出发， 去寻找我们的目标文件的，而 我们所说的 上一级 下一级 同一级 简单说，就是 图片 位于 HTML 页面的位置 绝对路径 绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的。 “D:\\web\\img\\logo.gif”，或完整的网络地址，例如“http://www.itcast.cn/images/logo.gif”。 注意： 绝对路径用的较少，我们理解下就可以了。 但是要注意，它的写法 特别是符号 \\ 并不是 相对路径的 / 3. @拓展阅读 3.1 锚点定位 （难点） 通过创建锚点链接，用户能够快速定位到目标内容。 创建锚点链接分为两步： 123451. 使用相应的id名标注跳转目标的位置。 (找目标) &lt;h3 id=\"two\"&gt;第2集&lt;/h3&gt; 2. 使用&lt;a href=\"#id名\"&gt;链接文本&lt;/a&gt;创建链接文本（被点击的） （拉关系） 我也有一个姓毕的姥爷.. &lt;a href=\"#two\"&gt; 快速记忆法： 好比找个人办事， 首先找到他，然后拉关系，最后看效果。 3.2 base 标签 语法： 1&lt;base target=\"_blank\" /&gt; **总结： ** base 可以设置整体链接的打开状态 base 写到 之间 把所有的连接 都默认添加 target=&quot;_blank&quot; 3.3 预格式化文本pre标签 标签可定义预格式化的文本。 被包围在 标签 元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。 123456789&lt;pre&gt; 此例演示如何使用 pre 标签 对空行和 空格 进行控制&lt;/pre&gt; **pink老师 一句话说出他们:** > 所谓的预格式化文本就是 ，按照我们预先写好的文字格式来显示页面， 保留空格和换行等。 有了这个标签，里面的文字，会按照我们书写的模式显示，不需要段落和换行标签了。但是，比较少用，因为不好整体控制。 #### 3.4 特殊字符 （理解） 一些特殊的符号，我们再html 里面很难或者 不方便直接 使用， 我们此时可以使用下面的替代代码。 **虽然有很多，但是我们平时用的比较较少， 大家重点记住 空格 大于号 小于号 就可以了，剩下的回来查阅。** **总结：** 1. 是以**运算符**`&`开头,以**分号运算符**`;`结尾。 2. 他们不是标签，而是符号。 3. HTML 中不能使用小于号 “”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体 **团队约定** *推荐：* 1&lt;a href&#x3D;&quot;#&quot;&gt;more &gt;&gt;&lt;&#x2F;a&gt; *不推荐：* 1&lt;a href&#x3D;&quot;#&quot;&gt;more &gt;&gt; &lt;&#x2F;a&gt; #### 3.5 html5发展之路 #### 3.6 什么是XHTML XHTML 是更严格更纯净的 HTML 代码。 - XHTML 指**可扩展超文本标签语言**（EXtensible HyperText Markup Language）。 - XHTML 的目标是取代 HTML。 - XHTML 与 HTML 4.01 几乎是相同的。 - XHTML 是更严格更纯净的 HTML 版本。 - XHTML 是作为一种 XML 应用被重新定义的 HTML。 - XHTML 是一个 W3C 标准。 #### 3.7 HTML和 XHTML之间有什么区别? - XHTML 指的是可扩展超文本标记语言 - XHTML 与 HTML 4.01 几乎是相同的 - XHTML 是更严格更纯净的 HTML 版本 - XHTML 是以 XML 应用的方式定义的 HTML - XHTML 是 2001 年 1 月发布的 W3C 推荐标准 - XHTML 得到所有主流浏览器的支持 - XHTML 元素是以 XML 格式编写的 HTML 元素。XHTML是严格版本的HTML，例如它要求标签必须小写，标签必须被正确关闭，标签顺序必须正确排列，对于属性都必须使用双引号等。 # 4. @深入阅读 [HTML5的崛起之路](http://www.chinaz.com/manage/2015/0720/424831.shtml)","categories":[{"name":"html基础","slug":"html基础","permalink":"http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"}],"tags":[],"author":"赵晓亮"},{"title":"HTML初识","slug":"02-认识HTML","date":"2018-01-11T08:36:49.000Z","updated":"2018-01-11T09:54:06.000Z","comments":true,"path":"2018/01/11/02-认识HTML/","link":"","permalink":"http://yoursite.com/2018/01/11/02-%E8%AE%A4%E8%AF%86HTML/","excerpt":"","text":"1. HTML 初识 HTML 指的是超文本标记语言 (Hyper Text Markup Language)是用来描述网页的一种语言。 H（很）T（甜）M（蜜）L（啦） HTML 不是一种编程语言，而是一种标记语言 (markup language) 标记语言是一套标记标签 (markup tag) 所谓超文本，有2层含义： 因为它可以加入图片、声音、动画、多媒体等内容（**超越文本限制 **） 不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（**超级链接文本 **）。 1&lt;h1&gt; 我是一个大标题 &lt;/h1&gt; 门外汉眼中的效果页面 我们要做的html页面 1.1 HTML骨架格式 日常生活的书信，我们要遵循共同的约定。 同理：HTML 有自己的语言语法骨架格式：（要遵循，要专业） 要求务必非常流畅的默写下来。。 1234567&lt;html&gt; &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt;&lt;/html&gt; html骨架标签总结 标签名 定义 说明 HTML标签 页面中最大的标签，我们成为 根标签 文档的头部 注意在head标签中我们必须要设置的标签是title 文档的标题 让页面拥有一个属于自己的网页标题 文档的主体 元素包含文档的所有内容，页面内容 基本都是放到body里面的 文档的标题 让页面拥有一个属于自己的网页标题 ** 现场练习1： ** 书写我们的第一个HTML 页面。 新建一个demo 的 TXT 文件。 里面写入刚才的HTML 骨架。 把后缀名改为 .HTML。 右击–谷歌浏览器打开。 12345678&lt;html&gt; &lt;head&gt; &lt;title&gt;我的第一个页面&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 键盘敲烂 月薪过万 &lt;/body&gt;&lt;/html&gt; 为了便于记忆，我们请出刚才要辞职回家养猪的二师兄来帮忙， 我称之为 猪八戒记忆法 团队约定大小写 HTML标签名、类名、标签属性和大部分属性值统一用小写 推荐： 123&lt;head&gt; &lt;title&gt;我的第一个页面&lt;&#x2F;title&gt; &lt;&#x2F;head&gt; 不推荐： 123&lt;HEAD&gt; &lt;TITLE&gt;我的第一个页面&lt;&#x2F;TITLE&gt;&lt;&#x2F;HEAD&gt; 1.2 HTML元素标签分类 标签： 在HTML页面中，带有“&lt; &gt;”符号的元素被称为HTML标签，如上面提到的 &lt;html&gt;、&lt;head&gt;、&lt;body&gt;都是HTML骨架结构标签。 分类： 常规元素（双标签） 1&lt;标签名&gt; 内容 &lt;/标签名&gt; 比如 &lt;body&gt; 我是文字 &lt;/body&gt; 该语法中“&lt;标签名&gt;”表示该标签的作用开始，一般称为“开始标签（start tag）”，“&lt;/标签名&gt;” 表示该标签的作用结束，一般称为“结束标签（end tag）”。 和开始标签相比，结束标签只是在前面加了一个关闭符“/”。 我们以后接触的基本都是双标签 空元素（单标签） 1&lt;标签名 /&gt; 比如 &lt;br /&gt; 空元素 用单标签来表示， 简单点说，就是里面不需要包含内容， 只有一个开始标签不需要关闭。 这种单身狗标签非常少，一共没多少，我们多记忆就好 1.3 HTML标签关系 主要针对于双标签 的相互关系分为两种： 请大家务必熟悉记住这种标签关系，因为后面我们标签嵌套特别多，很容易弄混他们的关系。 嵌套关系 123&lt;head&gt; &lt;title&gt; &lt;/title&gt; &lt;/head&gt; 2.并列关系 12&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt; 倡议： 1如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位（一个tab是4个空格）。如果是并列关系，最好上下对齐。 2. 代码开发工具（书写代码） 为了提高我们的开发效率 减少代码的出错我们不提倡用记事本开发，我们有更好的犀利哥。 Dreamweaver SublimeText WebStorm HBuilder VScode 有人说： 普通青年 Dreamweaver 文艺青年 sublime 高手和傻子 用记事本 其实。。。。 感觉： 这个feel 倍儿爽 feel feel倍儿爽 爽爽爽爽！ sublime有非常多的优点， 最开心的就是非常轻量级，打开速度超快，后面更高的功能，后面再接触。 sublime生成html骨架小技巧 双击打开软件 新建文件（ctrl+n） 保存（ctrl+s）,保存为：文件名.html （ 注意 后缀名必须是 .html ) 放大缩小代码 ctrl+ 加号 键 和 ctrl + 减号键 或者 按住 ctrl 在 滚动鼠标滚轮 生成页面骨架结构 html: 5 按下tab键 或者 ! 按下tab键 在浏览器中预览页面 右键在 浏览器中打开 3. 文档类型&lt;!DOCTYPE&gt; 同学你用啥手机？你咋回答？ 用法： 1&lt;!DOCTYPE html&gt; 作用： 声明位于文档中的最前面的位置，处于 标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。 **注意： ** 一些老网站可能用的还是老版本的文档类型比如 XHTML之类的，但是我们学的是HTML5,而且HTML5的文档类型兼容很好(向下兼容的原则)，所以大家放心的使用HTML5的文档类型就好了。 团队约定： 1HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明 4. 页面语言lang 1&lt;html lang=\"en\"&gt; 指定html 语言种类 最常见的2个： en定义语言为英语 zh-CN定义语言为中文 团队约定： 1考虑浏览器和操作系统的兼容性，目前仍然使用 zh-CN 属性值 @拓展阅读： 简单来说，可能对于程序来说没有太大的作用，但是它可以告诉浏览器，搜索引擎，一些处理Html的程序对页面语言内容来做一些对应的处理或者事情。 比如可以 根据根据lang属性来设定不同语言的css样式，或者字体 告诉搜索引擎做精确的识别 让语法检查程序做语言识别 帮助翻译工具做识别 帮助网页阅读程序做识别 等等 5. 字符集 1&lt;meta charset=\"UTF-8\" /&gt; 123字符集(Character set)是多个字符的集合。计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。 utf-8是目前最常用的字符集编码方式，常用的字符集编码方式还有gbk和gb2312。 gb2312 简单中文 包括6763个汉字 BIG5 繁体中文 港澳台等用 GBK包含全部中文字符 是GB2312的扩展，加入对繁体字的支持，兼容GB2312 UTF-8则基本包含全世界所有国家需要用到的字符 这句代码非常关键， 是必须要写的代码，否则可能引起乱码的情况。 团队约定： 1一般情况下统一使用 &quot;UTF-8&quot; 编码, 请尽量统一写成标准的 &quot;UTF-8&quot;，不要写成 &quot;utf-8&quot; 或 &quot;utf8&quot; 或 &quot;UTF8&quot;。 6. HTML标签的语义化 白话： 所谓标签语义化，就是指标签的含义。 方便代码的阅读和维护 同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容 使用语义化标签会具有更好地搜索引擎优化 语义是否良好： 当我们去掉CSS之后，网页结构依然组织有序，并且有良好的可读性。( 裸奔起来一样好看 ) 遵循的原则：先确定语义的HTML ，再选合适的CSS。所以，我们接下来学习html标签，要根据语义去记忆。 HTML网页中任何元素的实现都要依靠HTML标签。 7. 拓展阅读@ 单身狗的由来 单身狗一词最早是出自网络社区，起源与大话西游有关。 大话西游之大圣娶亲最后一幕“他好像一条狗”由来。","categories":[{"name":"html基础","slug":"html基础","permalink":"http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"}],"tags":[],"author":"赵晓亮"},{"title":"认识WEB","slug":"01-前言&WEB标准","date":"2018-01-08T08:36:49.000Z","updated":"2018-01-08T09:11:36.000Z","comments":true,"path":"2018/01/08/01-前言&WEB标准/","link":"","permalink":"http://yoursite.com/2018/01/08/01-%E5%89%8D%E8%A8%80&WEB%E6%A0%87%E5%87%86/","excerpt":"","text":"认识WEB 1. 认识网页 1网页主要由文字、图像和超链接等元素构成。当然，除了这些元素，网页中还可以包含音频、视频以及Flash等。 思考： 网页是如何形成的呢? 总结 网页有图片、链接、文字等元素组成，我们后面的任务就是要把这部分网页元素用代码写出来。。。 2. 浏览器（显示代码） 平时我们浏览网页，是在浏览器地址栏中输入网页地址，就可以访问我们的页面了。你的浏览器呢？ 1浏览器是网页显示、运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。 可能你最熟悉的是 IE浏览器，但是。。。 2.1 查看浏览器占有的市场份额 查看网站： http://tongji.baidu.com/data/browser 2008年，大名鼎鼎的互联网巨头Google公司发布了它的首款浏览器Chrome浏览器。 跟王思聪一样，没办法，生下来人家就是富二代官二代啊，后台太强，而且确实先天能力得天独厚。 2.2 常见浏览器内核（了解） 首先解释一下浏览器内核是什么东西。英文叫做：Rendering Engine，中文翻译很多，排版引擎、解释引擎、渲染引擎，现在流行称为浏览器内核. 1负责读取网页内容，整理讯息，计算网页的显示方式并显示页面. 因为浏览器太多啦， 但是现在主要流行的就是下面几个： 浏览器 内核 备注 IE Trident IE、猎豹安全、360极速浏览器、百度浏览器 firefox Gecko 可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。 Safari webkit 现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕再厕所里面了。 chrome Chromium/Blink 在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink内核。二次开发 Opera Presto Presto（已经废弃） 是挪威产浏览器 opera 的 “前任” 内核，为何说是 “前任”，因为最新的 opera 浏览器早已将之抛弃从而投入到了谷歌怀抱了。 现在用blink内核。 拓展阅读： 12345移动端的浏览器内核主要说的是系统内置浏览器的内核。Android手机而言，使用率最高的就是Webkit内核，大部分国产浏览器宣称的自己的内核，基本上也是属于webkit二次开发。iOS以及WP7平台上，由于系统原因，系统大部分自带浏览器内核，一般是Safari或者IE内核Trident的 3. Web标准（重点） 目标 记忆 能说出网页 中 web 标准三层组成 理解 能结合人来表述web标准三层 Web标准不是某一个标准，而是由W3C组织和其他标准化组织制定的一系列标准的集合。 W3C 万维网联盟是国际最著名的标准化组织。1994年成立后，至今已发布近百项相关万维网的标准，对万维网发展做出了杰出的贡献。 w3c就类似于现实世界中的联合国。 3.1 为什么要遵循WEB标准呢？ 通过以上浏览器的内核不同，我们知道他们渲染或者排版的模式就有些许差异，显示就会有差别。 1问： 哪个方言再全国基本都可以听得懂？ 3.2 Web 标准的好处 1、让Web的发展前景更广阔 2、内容能被更广泛的设备访问 3、更容易被搜寻引擎搜索 4、降低网站流量费用 5、使网站更易于维护 6、提高页面浏览速度 专业的人做专业的事。 来呀快活呀反正有大把时间~ 3.3 Web 标准构成 构成： 主要包括结构（Structure）、表现（Presentation）和行为（Behavior）三个方面。 结构标准：结构用于对网页元素进行整理和分类，咱们主要学的是HTML。 对于网页来说最重要的一部分 表现标准：表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS 行为标准：行为是指网页模型的定义及交互的编写，咱们主要学的是 Javascript 理想状态我们的源码： .HTML .css .js 直观感受： 总结WEB标准： 结构标准： 决定你是否有个好天然身体 结构层：通过对语义的分析，可以对其划分结构。具有了结构的内容，将更容易阅读 表现标准： 决定你是否打扮的美丽外观 表现层：是为了让网页就能展现出灵活多样的显示效果 行为标准： 决定你是否有吸引人的行为 行为层：用户对网页进行操作，网页可以做出响应性的变化。 小结 web标准有三层结构，分别是结构（html）、表现（css）和行为（javascript） 结构类似人的身体， 表现类似人的着装， 行为类似人的行为动作 理想状态下，他们三层都是独立的， 放到不同的文件里面 4. 拓展@ 介绍一下你对浏览器内核的理解？常见的浏览器内核有哪些？ 浏览器内核包括两部分，渲染引擎和js引擎。渲染引擎负责读取网页内容，整理讯息，计算网页的显示方式并显示页面，js引擎是解析执行js获取网页的动态效果。 后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。 IE：Trident firefox：Gecko chrom、safari：webkit Opera：Presto Microsoft Edge：EdgeHTML 深度阅读：五大主流浏览器内核的源起以及国内各大浏览器内核总结","categories":[{"name":"html基础","slug":"html基础","permalink":"http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"}],"tags":[],"author":"赵晓亮"}],"categories":[{"name":"web前端布局","slug":"web前端布局","permalink":"http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"},{"name":"html基础","slug":"html基础","permalink":"http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"}],"tags":[]}