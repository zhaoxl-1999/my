<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵晓亮</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-10T09:06:26.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>赵晓亮</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>移动端WEB开发之响应式布局</title>
    <link href="http://yoursite.com/2019/01/06/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E4%B9%8B%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/01/06/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E4%B9%8B%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/</id>
    <published>2019-01-06T08:35:52.000Z</published>
    <updated>2019-01-10T09:06:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="移动端web开发之响应式布局"><a class="markdownIt-Anchor" href="#移动端web开发之响应式布局"></a> 移动端WEB开发之响应式布局</h1><h3 id="10-响应式开发原理"><a class="markdownIt-Anchor" href="#10-响应式开发原理"></a> 1.0 响应式开发原理</h3><h4 id="11-响应式开发原理"><a class="markdownIt-Anchor" href="#11-响应式开发原理"></a> 1.1 响应式开发原理</h4><p>就是使用媒体查询针对不同宽度的设备进行布局和样式的设置，从而适配不同设备的目的。</p><p>设备的划分情况：</p><ul><li>小于768的为超小屏幕（手机）</li><li>768~992之间的为小屏设备（平板）</li><li>992~1200的中等屏幕（桌面显示器）</li><li>大于1200的宽屏设备（大桌面显示器）</li></ul><h4 id="12-响应式布局容器"><a class="markdownIt-Anchor" href="#12-响应式布局容器"></a> 1.2 响应式布局容器</h4><p>响应式需要一个父级做为布局容器，来配合子级元素来实现变化效果。</p><p>原理就是在不同屏幕下，通过媒体查询来改变这个布局容器的大小，再改变里面子元素的排列方式和大小，从而实现不同屏幕下，看到不同的页面布局和样式变化。</p><p>父容器版心的尺寸划分</p><ul><li>超小屏幕（手机，小于 768px）：设置宽度为 100%</li><li>小屏幕（平板，大于等于 768px）：设置宽度为 750px</li><li>中等屏幕（桌面显示器，大于等于 992px）：宽度设置为 970px</li><li>大屏幕（大桌面显示器，大于等于 1200px）：宽度设置为 1170px</li></ul><p>但是我们也可以根据实际情况自己定义划分</p><h3 id="20-bootstrap的介绍"><a class="markdownIt-Anchor" href="#20-bootstrap的介绍"></a> 2.0 bootstrap的介绍</h3><h4 id="21bootstrap简介"><a class="markdownIt-Anchor" href="#21bootstrap简介"></a> 2.1Bootstrap简介</h4><p>Bootstrap 来自 Twitter（推特），是目前最受欢迎的前端框架。Bootstrap 是基于HTML、CSS 和 JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。</p><p><a href="lhttp://www.bootcss.com/">中文网</a>  <a href="lhttp://getbootstrap.com/">官网</a>  <a href="http://bootstrap.css88.com/" target="_blank" rel="noopener">推荐网站</a></p><p>框架：顾名思义就是一套架构，它有一套比较完整的网页功能解决方案，而且控制权在框架本身，有预制样式库、组件和插件。使用者要按照框架所规定的某种规范进行开发。</p><h4 id="22-bootstrap优点"><a class="markdownIt-Anchor" href="#22-bootstrap优点"></a> 2.2 bootstrap优点</h4><ul><li>标准化的html+css编码规范</li><li>提供了一套简洁、直观、强悍的组件</li><li>有自己的生态圈，不断的更新迭代</li><li>让开发更简单，提高了开发的效率</li></ul><h4 id="23-版本简介"><a class="markdownIt-Anchor" href="#23-版本简介"></a> 2.3 版本简介</h4><p>2.x.x：停止维护,兼容性好,代码不够简洁，功能不够完善。</p><p>3.x.x：目前使用最多,稳定,但是放弃了IE6-IE7。对 IE8 支持但是界面效果不好,偏向用于开发响应式布局、移动设备优先的WEB 项目。</p><p>4.x.x：最新版，目前还不是很流行</p><h4 id="24bootstrap基本使用"><a class="markdownIt-Anchor" href="#24bootstrap基本使用"></a> 2.4bootstrap基本使用</h4><p>在现阶段我们还没有接触JS相关课程，所以我们只考虑使用它的样式库。</p><p>Bootstrap 使用四步曲：</p><ol><li><p>创建文件夹结构</p><p><img src="/images/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E4%B9%8B%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/1.png" alt="" /></p><p>​</p></li><li><p>创建 html 骨架结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;zh-CN&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1&quot;&gt;</span><br><span class="line">    &lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;Bootstrap 101 Template&lt;&#x2F;title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Bootstrap --&gt;</span><br><span class="line">    &lt;link href&#x3D;&quot;css&#x2F;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&gt;</span><br><span class="line">    &lt;!-- WARNING: Respond.js doesn&#39;t work if you view the page via file:&#x2F;&#x2F; --&gt;</span><br><span class="line">    &lt;!--[if lt IE 9]&gt;</span><br><span class="line">      &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;html5shiv&#x2F;3.7.2&#x2F;html5shiv.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">      &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;respond.js&#x2F;1.4.2&#x2F;respond.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;![endif]--&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;你好，世界！&lt;&#x2F;h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- jQuery (necessary for Bootstrap&#39;s JavaScript plugins) --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery&#x2F;1.11.3&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;!-- Include all compiled plugins (below), or include individual files as needed --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>引入相关样式文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Bootstrap 核心样式--&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;bootstrap&#x2F;css&#x2F;bootstrap.min.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>书写内容</p><p>直接拿Bootstrap 预先定义好的样式来使用</p><p>修改Bootstrap 原来的样式，注意权重问题</p><p>学好Bootstrap 的关键在于知道它定义了哪些样式，以及这些样式能实现什么样的效果</p></li></ol><h4 id="25-bootstrap布局容器"><a class="markdownIt-Anchor" href="#25-bootstrap布局容器"></a> 2.5 bootstrap布局容器</h4><p>Bootstrap 需要为页面内容和栅格系统包裹一个 .container 或者.container-fluid 容器，它提供了两个作此用处的类。</p><p>.container</p><ul><li>响应式布局的容器  固定宽度</li><li>大屏 ( &gt;=1200px)  宽度定为 1170px</li><li>中屏 ( &gt;=992px)   宽度定为  970px</li><li>小屏 ( &gt;=768px)   宽度定为  750px</li><li>超小屏  (100%)</li></ul><p>.container-fluid</p><ul><li>流式布局容器 百分百宽度</li><li>占据全部视口（viewport）的容器。</li></ul><h4 id="26-bootstrap栅格系统"><a class="markdownIt-Anchor" href="#26-bootstrap栅格系统"></a> 2.6 bootstrap栅格系统</h4><p>Bootstrap提供了一套响应式、移动设备优先的流式栅格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多12列。</p><p>栅格系统用于通过一系列的行（row）与列（column）的组合来创建页面布局，你的内容就可以放入这些创建好的布局中。</p><ul><li>按照不同屏幕划分为1~12 等份</li><li>行（row） 可以去除父容器作用15px的边距</li><li>xs-extra small：超小； sm-small：小；  md-medium：中等； lg-large：大；</li><li>列（column）大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列</li><li>每一列默认有左右15像素的 padding</li><li>可以同时为一列指定多个设备的类名，以便划分不同份数  例如 class=“col-md-4 col-sm-6”</li></ul><p>栅格嵌套</p><p>栅格系统内置的栅格系统将内容再次嵌套。简单理解就是一个列内再分成若干份小列。我们可以通过添加一个新的 .row 元素和一系列 .col-sm-* 元素到已经存在的 .col-sm-*<br />元素内。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 列嵌套 --&gt;</span><br><span class="line"> &lt;div class&#x3D;&quot;col-sm-4&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">         &lt;div class&#x3D;&quot;col-sm-6&quot;&gt;小列&lt;&#x2F;div&gt;</span><br><span class="line">         &lt;div class&#x3D;&quot;col-sm-6&quot;&gt;小列&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>列偏移</p><p>使用 .col-md-offset-* 类可以将列向右侧偏移。这些类实际是通过使用 * 选择器为当前元素增加了左侧的边距（margin）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 列偏移 --&gt;</span><br><span class="line"> &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">     &lt;div class&#x3D;&quot;col-lg-4&quot;&gt;1&lt;&#x2F;div&gt;</span><br><span class="line">     &lt;div class&#x3D;&quot;col-lg-4 col-lg-offset-4&quot;&gt;2&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>列排序</p><p>通过使用 .col-md-push-* 和 .col-md-pull-* 类就可以很容易的改变列（column）的顺序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 列排序 --&gt;</span><br><span class="line"> &lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">     &lt;div class&#x3D;&quot;col-lg-4 col-lg-push-8&quot;&gt;左侧&lt;&#x2F;div&gt;</span><br><span class="line">     &lt;div class&#x3D;&quot;col-lg-8 col-lg-pull-4&quot;&gt;右侧&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>响应式工具</p><p>为了加快对移动设备友好的页面开发工作，利用媒体查询功能，并使用这些工具类可以方便的针对不同设备展示或隐藏页面内容。</p><p><img src="/images/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91%E4%B9%8B%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/2.jpg" alt="" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;移动端web开发之响应式布局&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#移动端web开发之响应式布局&quot;&gt;&lt;/a&gt; 移动端WEB开发之响应式布局&lt;/h1&gt;
&lt;h3 id=&quot;10-响应式开发原理&quot;&gt;&lt;a class=&quot;markdownI
      
    
    </summary>
    
    
      <category term="web前端布局" scheme="http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>移动web开发之rem布局</title>
    <link href="http://yoursite.com/2019/01/04/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_rem%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/01/04/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_rem%E5%B8%83%E5%B1%80/</id>
    <published>2019-01-04T08:35:44.000Z</published>
    <updated>2019-01-04T09:09:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="移动web开发之rem布局"><a class="markdownIt-Anchor" href="#移动web开发之rem布局"></a> 移动web开发之rem布局</h1><h3 id="rem基础"><a class="markdownIt-Anchor" href="#rem基础"></a> rem基础</h3><h4 id="rem单位"><a class="markdownIt-Anchor" href="#rem单位"></a> rem单位</h4><p>rem (root em)是一个相对单位，类似于em，em是父元素字体大小。</p><p>不同的是rem的基准是相对于html元素的字体大小。</p><p>比如，根元素（html）设置font-size=12px; 非根元素设置width:2rem; 则换成px表示就是24px。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 根html 为 12px *&#x2F;</span><br><span class="line">html &#123;</span><br><span class="line">   font-size: 12px;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 此时 div 的字体大小就是 24px *&#x2F;       </span><br><span class="line">div &#123;</span><br><span class="line">    font-size: 2rem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>rem的优势：父元素文字大小可能不一致， 但是整个页面只有一个html，可以很好来控制整个页面的元素大小。</p><h3 id="媒体查询"><a class="markdownIt-Anchor" href="#媒体查询"></a> 媒体查询</h3><h4 id="什么是媒体查询"><a class="markdownIt-Anchor" href="#什么是媒体查询"></a> 什么是媒体查询</h4><p>媒体查询（Media Query）是CSS3新语法。</p><ul><li>使用 @media查询，可以针对不同的媒体类型定义不同的样式</li><li>@media 可以针对不同的屏幕尺寸设置不同的样式</li><li>当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面</li><li>目前针对很多苹果手机、Android手机，平板等设备都用得到多媒体查询</li></ul><h4 id="媒体查询语法规范"><a class="markdownIt-Anchor" href="#媒体查询语法规范"></a> 媒体查询语法规范</h4><ul><li>用 @media开头 注意@符号</li><li>mediatype  媒体类型</li><li>关键字 and  not  only</li><li>media feature 媒体特性必须有小括号包含</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@media mediatype and|not|only (media feature) &#123;</span><br><span class="line">    CSS-Code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>mediatype 查询类型</li></ol><p>​       将不同的终端设备划分成不同的类型，称为媒体类型</p><img src="/images/移动web开发_rem布局/1.jpg"><ol start="2"><li>关键字</li></ol><p>​       关键字将媒体类型或多个媒体特性连接到一起做为媒体查询的条件。</p><ul><li>and：可以将多个媒体特性连接到一起，相当于“且”的意思。</li><li>not：排除某个媒体类型，相当于“非”的意思，可以省略。</li><li>only：指定某个特定的媒体类型，可以省略。</li></ul><ol start="3"><li><p>媒体特性</p><p>每种媒体类型都具体各自不同的特性，根据不同媒体类型的媒体特性设置不同的展示风格。我们暂且了解三个。</p><p>注意他们要加小括号包含</p><img src="/images/移动web开发_rem布局/2.jpg"><p>​</p></li><li><p>媒体查询书写规则</p><p>注意： 为了防止混乱，媒体查询我们要按照从小到大或者从大到小的顺序来写,但是我们最喜欢的还是从小到大来写，这样代码更简洁</p><img src="/images/移动web开发_rem布局/3.png"><p>​</p><p>​</p></li></ol><h3 id="less-基础"><a class="markdownIt-Anchor" href="#less-基础"></a> less 基础</h3><h4 id="维护css弊端"><a class="markdownIt-Anchor" href="#维护css弊端"></a> 维护css弊端</h4><p>CSS 是一门非程序式语言，没有变量、函数、SCOPE（作用域）等概念。</p><ul><li>CSS 需要书写大量看似没有逻辑的代码，CSS 冗余度是比较高的。</li><li>不方便维护及扩展，不利于复用。</li><li>CSS 没有很好的计算能力</li><li>非前端开发工程师来讲，往往会因为缺少 CSS 编写经验而很难写出组织良好且易于维护的 CSS 代码项目。</li></ul><h4 id="less-介绍"><a class="markdownIt-Anchor" href="#less-介绍"></a> Less 介绍</h4><p>Less（LeanerStyle Sheets 的缩写）是一门 CSS扩展语言，也成为CSS预处理器。</p><p>做为 CSS的一种形式的扩展，它并没有减少CSS的功能，而是在现有的CSS语法上，为CSS加入程序式语言的特性。</p><p>它在CSS 的语法基础之上，引入了变量，Mixin（混入），运算以及函数等功能，大大简化了 CSS 的编写，并且降低了 CSS的维护成本，就像它的名称所说的那样，Less可以让我们用更少的代码做更多的事情。</p><p>Less中文网址：<a href="http://lesscss.cn/" target="_blank" rel="noopener">http://</a><a href="http://lesscss.cn/" target="_blank" rel="noopener">less</a><a href="http://lesscss.cn/" target="_blank" rel="noopener">css.cn/</a></p><p>常见的CSS预处理器：Sass、Less、Stylus</p><p>一句话：Less是一门 CSS 预处理语言，它扩展了CSS的动态特性。</p><p>Less安装</p><p>①安装nodejs，可选择版本(8.0)，网址：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p><p>②检查是否安装成功，使用cmd命令（win10是window+r 打开运行输入cmd）  —输入“node –v”查看版本即可</p><p>③基于nodejs在线安装Less，使用cmd命令“npm install -g less”即可</p><p>④检查是否安装成功，使用cmd命令“ lessc -v ”查看版本即可</p><p>Less 使用之变量</p><p>变量是指没有固定的值，可以改变的。因为我们CSS中的一些颜色和数值等经常使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@变量名:值;</span><br></pre></td></tr></table></figure><ul><li>必须有@为前缀</li><li>不能包含特殊字符</li><li>不能以数字开头</li><li>大小写敏感</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@color: pink;</span><br></pre></td></tr></table></figure><p>Less 编译 vocode Less 插件</p><p>Easy LESS 插件用来把less文件编译为css文件</p><p>安装完毕插件，重新加载下 vscode。</p><p>只要保存一下Less文件，会自动生成CSS文件。</p><img src="/images/移动web开发_rem布局/4.png"><p>Less 嵌套</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 将css改为less</span><br><span class="line">#header .logo &#123;</span><br><span class="line">  width: 300px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#header &#123;</span><br><span class="line">    .logo &#123;</span><br><span class="line">       width: 300px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果遇见 （交集|伪类|伪元素选择器） ，利用&amp;进行连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a:hover&#123;</span><br><span class="line">    color:red;</span><br><span class="line">&#125;</span><br><span class="line">a&#123;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">      color:red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Less 运算</p><p>任何数字、颜色或者变量都可以参与运算。就是Less提供了加（+）、减（-）、乘（*）、除（/）算术运算。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*Less 里面写*&#x2F;</span><br><span class="line">@witdh: 10px + 5;</span><br><span class="line">div &#123;</span><br><span class="line">    border: @witdh solid red;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*生成的css*&#x2F;</span><br><span class="line">div &#123;</span><br><span class="line">  border: 15px solid red;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*Less 甚至还可以这样 *&#x2F;</span><br><span class="line">width: (@width + 5) * 2;</span><br></pre></td></tr></table></figure><ul><li>乘号（*）和除号（/）的写法</li><li>运算符中间左右有个空格隔开 1px + 5</li><li>对于两个不同的单位的值之间的运算，运算结果的值取第一个值的单位</li><li>如果两个值之间只有一个值有单位，则运算结果就取该单位</li></ul><h3 id="rem适配方案"><a class="markdownIt-Anchor" href="#rem适配方案"></a> rem适配方案</h3><p>1.让一些不能等比自适应的元素，达到当设备尺寸发生改变的时候，等比例适配当前设备。</p><p>2.使用媒体查询根据不同设备按比例设置html的字体大小，然后页面元素使用rem做尺寸单位，当html字体大小变化元素尺寸也会发生变化，从而达到等比缩放的适配。</p><p>技术方案：</p><p>1.less+rem+媒体查询</p><p>2.lflexible.js+rem</p><p>总结：</p><p>两种方案现在都存在。</p><p>方案2 更简单，现阶段大家无需了解里面的js代码。</p><h4 id="rem实际开发适配方案1"><a class="markdownIt-Anchor" href="#rem实际开发适配方案1"></a> rem实际开发适配方案1</h4><p>①假设设计稿是750px</p><p>②假设我们把整个屏幕划分为15等份（划分标准不一可以是20份也可以是10等份）</p><p>③每一份作为html字体大小，这里就是50px</p><p>④那么在320px设备的时候，字体大小为320/15就是  21.33px</p><p>⑤用我们页面元素的大小除以不同的 html字体大小会发现他们比例还是相同的</p><p>⑥比如我们以750为标准设计稿</p><p>⑦一个100<em>100像素的页面元素在  750屏幕下，  就是 100/ 50  转换为rem  是  2rem</em>2rem  比例是1比1</p><p>⑧320屏幕下，  html字体大小为21.33   则 2rem=  42.66px  此时宽和高都是 42.66  但是宽和高的比例还是 1比1</p><p>⑨但是已经能实现不同屏幕下  页面元素盒子等比例缩放的效果</p><p>总结：</p><p>①最后的公式：页面元素的rem值 =  页面元素值（px） /  （屏幕宽度  /  划分的份数）</p><p>②屏幕宽度/划分的份数就是 htmlfont-size 的大小</p><p>③或者：页面元素的rem值 =  页面元素值（px） /  html font-size 字体大小</p><h3 id="苏宁首页"><a class="markdownIt-Anchor" href="#苏宁首页"></a> 苏宁首页</h3><p>苏宁首页地址 ：<a href="m.suning.com">苏宁首页</a></p><p>1、 技术选型</p><p>方案：我们采取单独制作移动页面方案</p><p>技术：布局采取rem适配布局（less + rem  + 媒体查询）</p><p>设计图： 本设计图采用 750px 设计尺寸</p><p>2、搭建文件结构</p><img src="/images/移动web开发_rem布局/5.jpg"><p>3、设置视口标签以及引入初始化样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, user-scalable&#x3D;no,         initial-scale&#x3D;1.0, maximum-scale&#x3D;1.0, minimum-scale&#x3D;1.0&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;normalize.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>4、设置公共common.less文件</p><ul><li>新建common.less    设置好最常见的屏幕尺寸，利用媒体查询设置不同的html字体大小，因为除了首页其他页面也需要</li><li>我们关心的尺寸有 320px、360px、375px、384px、400px、414px、424px、480px、540px、720px、750px</li><li>划分的份数我们定为 15等份</li><li>因为我们pc端也可以打开我们苏宁移动端首页，我们默认html字体大小为 50px，注意这句话写到最上面</li></ul><h3 id="rem-适配方案2"><a class="markdownIt-Anchor" href="#rem-适配方案2"></a> rem 适配方案2</h3><p>手机淘宝团队出的简洁高效 移动端适配库</p><p>我们再也不需要在写不同屏幕的媒体查询，因为里面js做了处理</p><p>它的原理是把当前设备划分为10等份，但是不同设备下，比例还是一致的。</p><p>我们要做的，就是确定好我们当前设备的html 文字大小就可以了</p><p>比如当前设计稿是 750px， 那么我们只需要把 html 文字大小设置为 75px(750px / 10) 就可以</p><p>里面页面元素rem值： 页面元素的px 值 /  75</p><p>剩余的，让flexible.js来去算</p><p>github地址：<a href="https://link.jianshu.com/?t=https://github.com/amfe/lib-flexible" target="_blank" rel="noopener">https://github.com/amfe/lib-flexible</a></p><p>总结：</p><p>因为flexible是默认将屏幕分为10等分</p><p>但是当屏幕大于750的时候希望不要再去重置html字体了</p><p>所以要自己通过媒体查询设置一下</p><p>并且要把权重提到最高</p><p>VSCode  px 转换rem 插件 cssrem</p><p>因为cssrem中css自动转化为rem是参照默认插件的16转换的所以需要自己配置</p><img src="/images/移动web开发_rem布局/6.jpg"><img src="/images/移动web开发_rem布局/7.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;移动web开发之rem布局&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#移动web开发之rem布局&quot;&gt;&lt;/a&gt; 移动web开发之rem布局&lt;/h1&gt;
&lt;h3 id=&quot;rem基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor
      
    
    </summary>
    
    
      <category term="web前端布局" scheme="http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>移动web开发——flex布局</title>
    <link href="http://yoursite.com/2018/10/17/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_flex%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2018/10/17/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_flex%E5%B8%83%E5%B1%80/</id>
    <published>2018-10-17T10:42:11.000Z</published>
    <updated>2018-10-18T09:10:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="移动web开发flex布局"><a class="markdownIt-Anchor" href="#移动web开发flex布局"></a> 移动web开发——flex布局</h1><h2 id="10传统布局和flex布局对比"><a class="markdownIt-Anchor" href="#10传统布局和flex布局对比"></a> 1.0传统布局和flex布局对比</h2><h3 id="11传统布局"><a class="markdownIt-Anchor" href="#11传统布局"></a> 1.1传统布局</h3><ul><li>兼容性好</li><li>布局繁琐</li><li>局限性，不能再移动端很好的布局</li></ul><h3 id="12-flex布局"><a class="markdownIt-Anchor" href="#12-flex布局"></a> 1.2 flex布局</h3><ul><li>操作方便，布局极其简单，移动端使用比较广泛</li><li>pc端浏览器支持情况比较差</li><li>IE11或更低版本不支持flex或仅支持部分</li></ul><h3 id="13-建议"><a class="markdownIt-Anchor" href="#13-建议"></a> 1.3 建议</h3><ul><li>如果是pc端页面布局，还是采用传统方式</li><li>如果是移动端或者是不考虑兼容的pc则采用flex</li></ul><h2 id="20-flex布局原理"><a class="markdownIt-Anchor" href="#20-flex布局原理"></a> 2.0 flex布局原理</h2><ul><li>flex 是 flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为 flex 布局。</li><li>当我们为父盒子设为 flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效。</li><li>flex布局又叫伸缩布局 、弹性布局 、伸缩盒布局 、弹性盒布局</li><li>采用 Flex 布局的元素，称为 Flex 容器（flex</li></ul><p>container），简称&quot;容器&quot;。它的所有子元素自动成为容器成员，称为 Flex 项目（flex<br />item），简称&quot;项目&quot;。</p><p><strong>总结</strong>：就是通过给父盒子添加flex属性，来控制子盒子的位置和排列方式</p><h2 id="30-父项常见属性"><a class="markdownIt-Anchor" href="#30-父项常见属性"></a> 3.0 父项常见属性</h2><ul><li>flex-direction：设置主轴的方向</li><li>justify-content：设置主轴上的子元素排列方式</li><li>flex-wrap：设置子元素是否换行</li><li>align-content：设置侧轴上的子元素的排列方式（多行）</li><li>align-items：设置侧轴上的子元素排列方式（单行）</li><li>flex-flow：复合属性，相当于同时设置了 flex-direction 和 flex-wrap</li></ul><h3 id="31-flex-direction设置主轴的方向"><a class="markdownIt-Anchor" href="#31-flex-direction设置主轴的方向"></a> 3.1 flex-direction设置主轴的方向</h3><ul><li>在 flex 布局中，是分为主轴和侧轴两个方向，同样的叫法有 ： 行和列、x 轴和y 轴</li><li>默认主轴方向就是 x 轴方向，水平向右</li><li>默认侧轴方向就是 y 轴方向，水平向下</li></ul><img src="/images/移动web开发_flex布局/1.jpg"><ul><li><p>注意： 主轴和侧轴是会变化的，就看 flex-direction 设置谁为主轴，剩下的就是侧轴。而我们的子元素是跟着主轴来排列的</p><img src="/images/移动web开发_flex布局/2.jpg"><p>​</p></li></ul><h3 id="32-justify-content-设置主轴上的子元素排列方式"><a class="markdownIt-Anchor" href="#32-justify-content-设置主轴上的子元素排列方式"></a> 3.2 justify-content 设置主轴上的子元素排列方式</h3><img src="/images/移动web开发_flex布局/3.jpg"><h3 id="33-flex-wrap设置是否换行"><a class="markdownIt-Anchor" href="#33-flex-wrap设置是否换行"></a> 3.3 flex-wrap设置是否换行</h3><ul><li>默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，flex布局中默认是不换行的。</li><li>nowrap 不换行</li><li>wrap 换行</li></ul><h3 id="34-align-items-设置侧轴上的子元素排列方式单行"><a class="markdownIt-Anchor" href="#34-align-items-设置侧轴上的子元素排列方式单行"></a> 3.4 align-items 设置侧轴上的子元素排列方式（单行 ）</h3><ul><li>该属性是控制子项在侧轴（默认是y轴）上的排列方式  在子项为单项（单行）的时候使用</li><li>flex-start 从头部开始</li><li>flex-end 从尾部开始</li><li>center 居中显示</li><li>stretch 拉伸</li></ul><h3 id="35-align-content-设置侧轴上的子元素的排列方式多行"><a class="markdownIt-Anchor" href="#35-align-content-设置侧轴上的子元素的排列方式多行"></a> 3.5 align-content  设置侧轴上的子元素的排列方式（多行）</h3><p>设置子项在侧轴上的排列方式 并且只能用于子项出现 换行 的情况（多行），在单行下是没有效果的。</p><img src="/images/移动web开发_flex布局/4.jpg"><h3 id="36-align-content-和align-items区别"><a class="markdownIt-Anchor" href="#36-align-content-和align-items区别"></a> 3.6 align-content 和align-items区别</h3><ul><li>align-items  适用于单行情况下， 只有上对齐、下对齐、居中和 拉伸</li><li>align-content适应于换行（多行）的情况下（单行情况下无效）， 可以设置 上对齐、下对齐、居中、拉伸以及平均分配剩余空间等属性值。</li><li>总结就是单行找align-items  多行找 align-content</li></ul><h3 id="37-flex-flow-属性是-flex-direction-和-flex-wrap-属性的复合属性"><a class="markdownIt-Anchor" href="#37-flex-flow-属性是-flex-direction-和-flex-wrap-属性的复合属性"></a> 3.7 flex-flow 属性是 flex-direction 和 flex-wrap 属性的复合属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flex-flow:row wrap;</span><br></pre></td></tr></table></figure><h2 id="40-flex布局子项常见属性"><a class="markdownIt-Anchor" href="#40-flex布局子项常见属性"></a> 4.0 flex布局子项常见属性</h2><ul><li>flex子项目占的份数</li><li>align-self控制子项自己在侧轴的排列方式</li><li>order属性定义子项的排列顺序（前后顺序）</li></ul><h3 id="41-flex-属性"><a class="markdownIt-Anchor" href="#41-flex-属性"></a> 4.1  flex 属性</h3><p>flex 属性定义子项目分配剩余空间，用flex来表示占多少份数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">    flex: &lt;number&gt;; &#x2F;* 默认值 0 *&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="42-align-self控制子项自己在侧轴上的排列方式"><a class="markdownIt-Anchor" href="#42-align-self控制子项自己在侧轴上的排列方式"></a> 4.2 align-self控制子项自己在侧轴上的排列方式</h3><p>align-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。</p><p>默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">span:nth-child(2) &#123;</span><br><span class="line">      &#x2F;* 设置自己在侧轴上的排列方式 *&#x2F;</span><br><span class="line">      align-self: flex-end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="43-order-属性定义项目的排列顺序"><a class="markdownIt-Anchor" href="#43-order-属性定义项目的排列顺序"></a> 4.3 order 属性定义项目的排列顺序</h3><p>数值越小，排列越靠前，默认为0。</p><p>注意：和 z-index 不一样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.item &#123;</span><br><span class="line">    order: &lt;number&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;移动web开发flex布局&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#移动web开发flex布局&quot;&gt;&lt;/a&gt; 移动web开发——flex布局&lt;/h1&gt;
&lt;h2 id=&quot;10传统布局和flex布局对比&quot;&gt;&lt;a class=&quot;markd
      
    
    </summary>
    
    
      <category term="web前端布局" scheme="http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>移动web开发流式布局</title>
    <link href="http://yoursite.com/2018/10/10/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_%E6%B5%81%E5%BC%8F%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2018/10/10/%E7%A7%BB%E5%8A%A8web%E5%BC%80%E5%8F%91_%E6%B5%81%E5%BC%8F%E5%B8%83%E5%B1%80/</id>
    <published>2018-10-10T10:42:11.000Z</published>
    <updated>2018-10-11T02:53:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="移动web开发流式布局"><a class="markdownIt-Anchor" href="#移动web开发流式布局"></a> 移动web开发流式布局</h1><h3 id="10-移动端基础"><a class="markdownIt-Anchor" href="#10-移动端基础"></a> 1.0 移动端基础</h3><h4 id="11浏览器现状"><a class="markdownIt-Anchor" href="#11浏览器现状"></a> 1.1浏览器现状</h4><p>PC端常见浏览器：360浏览器、谷歌浏览器、火狐浏览器、QQ浏览器、百度浏览器、搜狗浏览器、IE浏览器。</p><p>移动端常见浏览器：UC浏览器，QQ浏览器，欧朋浏览器，百度手机浏览器，360安全浏览器，谷歌浏览器，搜狗手机浏览器，猎豹浏览器，以及其他杂牌浏览器。</p><p>国内的UC和QQ，百度等手机浏览器都是根据Webkit修改过来的内核，国内尚无自主研发的内核，就像国内的手机操作系统都是基于Android修改开发的一样。</p><p><strong>总结：兼容移动端主流浏览器，处理Webkit内核浏览器即可。</strong></p><h4 id="12-手机屏幕的现状"><a class="markdownIt-Anchor" href="#12-手机屏幕的现状"></a> 1.2 手机屏幕的现状</h4><ul><li>移动端设备屏幕尺寸非常多，碎片化严重。</li><li>Android设备有多种分辨率：480x800, 480x854, 540x960, 720x1280，1080x1920等，还有传说中的2K，4k屏。</li><li>近年来iPhone的碎片化也加剧了，其设备的主要分辨率有：640x960, 640x1136, 750x1334, 1242x2208等。</li><li>作为开发者无需关注这些分辨率，因为我们常用的尺寸单位是 px 。</li></ul><h4 id="13常见移动端屏幕尺寸"><a class="markdownIt-Anchor" href="#13常见移动端屏幕尺寸"></a> 1.3常见移动端屏幕尺寸</h4><img src="/images/移动web开发_流式布局/1.png"><h4 id="14移动端调试方法"><a class="markdownIt-Anchor" href="#14移动端调试方法"></a> 1.4移动端调试方法</h4><ul><li>Chrome DevTools（谷歌浏览器）的模拟手机调试</li><li>搭建本地web服务器，手机和服务器一个局域网内，通过手机访问服务器</li><li>使用外网服务器，直接IP或域名访问</li></ul><h3 id="20-视口"><a class="markdownIt-Anchor" href="#20-视口"></a> 2.0 视口</h3><p>视口（viewport）就是浏览器显示页面内容的屏幕区域。 视口可以分为布局视口、视觉视口和理想视口</p><h4 id="21-布局视口-layout-viewport"><a class="markdownIt-Anchor" href="#21-布局视口-layout-viewport"></a> 2.1 布局视口 layout viewport</h4><p>一般移动设备的浏览器都默认设置了一个布局视口，用于解决早期的PC端页面在手机上显示的问题。</p><p>iOS, Android基本都将这个视口分辨率设置为 980px，所以PC上的网页大多都能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页。</p><img src="/images/移动web开发_流式布局/2.png"><h4 id="22视觉视口-visual-viewport"><a class="markdownIt-Anchor" href="#22视觉视口-visual-viewport"></a> 2.2视觉视口 visual viewport</h4><p>字面意思，它是用户正在看到的网站的区域。注意：是网站的区域。</p><p>我们可以通过缩放去操作视觉视口，但不会影响布局视口，布局视口仍保持原来的宽度。</p><img src="/images/移动web开发_流式布局/3.png"><h4 id="23理想视口-ideal-viewport"><a class="markdownIt-Anchor" href="#23理想视口-ideal-viewport"></a> 2.3理想视口 ideal viewport</h4><p>为了使网站在移动端有最理想的浏览和阅读宽度而设定</p><p>理想视口，对设备来讲，是最理想的视口尺寸</p><p>需要手动添写meta视口标签通知浏览器操作</p><p>meta视口标签的主要目的：布局视口的宽度应该与理想视口的宽度一致，简单理解就是设备有多宽，我们布局的视口就多宽</p><p><strong>总结：我们开发最终会用理想视口，而理想视口就是将布局视口的宽度修改为视觉视口</strong></p><h4 id="24meta标签"><a class="markdownIt-Anchor" href="#24meta标签"></a> 2.4meta标签</h4><img src="/images/移动web开发_流式布局/4.png"><p>最标准的viewport设置</p><ul><li>视口宽度和设备保持一致</li><li>视口的默认缩放比例1.0</li><li>不允许用户自行缩放</li><li>最大允许的缩放比例1.0</li><li>最小允许的缩放比例1.0</li></ul><h3 id="30二倍图"><a class="markdownIt-Anchor" href="#30二倍图"></a> 3.0二倍图</h3><h4 id="31物理像素物理像素比"><a class="markdownIt-Anchor" href="#31物理像素物理像素比"></a> 3.1物理像素&amp;物理像素比</h4><p>物理像素点指的是屏幕显示的最小颗粒，是物理真实存在的。这是厂商在出厂时就设置好了,比如苹果6 是  750* 1334</p><p>我们开发时候的1px 不是一定等于1个物理像素的</p><p>一个px的能显示的物理像素点的个数，称为物理像素比或屏幕像素比</p><p>如果把1张100*100的图片放到手机里面会按照物理像素比给我们缩放</p><p>lRetina（视网膜屏幕）是一种显示技术，可以将把更多的物理像素点压缩至一块屏幕里，从而达到更高的分辨率，并提高屏幕显示的细腻程度。</p><p>对于一张 50px * 50px 的图片,在手机或 Retina 屏中打开，按照刚才的物理像素比会放大倍数，这样会造成图片模糊</p><p>在标准的viewport设置中，使用倍图来提高图片质量，解决在高清设备中的模糊问题</p><p>通常使用二倍图， 因为iPhone 6 的影响背景图片 注意缩放问题</p><h4 id="32背景缩放background-size"><a class="markdownIt-Anchor" href="#32背景缩放background-size"></a> 3.2背景缩放background-size</h4><p>background-size 属性规定背景图像的尺寸</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-size: 背景图片宽度 背景图片高度;</span><br></pre></td></tr></table></figure><p>单位： 长度|百分比|cover|contain;</p><p>cover把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。</p><p>contain把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域</p><h3 id="40-移动开发选择和技术解决方案"><a class="markdownIt-Anchor" href="#40-移动开发选择和技术解决方案"></a> 4.0 移动开发选择和技术解决方案</h3><h4 id="41移动端主流方案"><a class="markdownIt-Anchor" href="#41移动端主流方案"></a> 4.1移动端主流方案</h4><p>1.单独制作移动端页面（主流）</p><p>通常情况下，网址域名前面加 m(mobile)<br />可以打开移动端。通过判断设备，如果是移动设备打开，则跳到移动端页面。</p><p>也就是说，PC端和移动端为两套网站，pc端是pc断的样式，移动端在写一套，专门针对移动端适配的一套网站</p><p>京东pc端：</p><img src="/images/移动web开发_流式布局/5.png"><p>京东移动端：</p><img src="/images/移动web开发_流式布局/6.jpg"><p>2.响应式页面兼容移动端（其次）</p><img src="/images/移动web开发_流式布局/7.jpg"><p>响应式网站：即pc和移动端共用一套网站，只不过在不同屏幕下，样式会自动适配</p><h4 id="42-移动端技术解决方案"><a class="markdownIt-Anchor" href="#42-移动端技术解决方案"></a> 4.2 移动端技术解决方案</h4><p>1.移动端浏览器兼容问题</p><p>移动端浏览器基本以 webkit 内核为主，因此我们就考虑webkit兼容性问题。</p><p>我们可以放心使用 H5 标签和 CSS3 样式。</p><p>同时我们浏览器的私有前缀我们只需要考虑添加 webkit 即可</p><p>2.移动端公共样式</p><p>移动端 CSS 初始化推荐使用 normalize.css/</p><p>Normalize.css：保护了有价值的默认值</p><p>Normalize.css：修复了浏览器的bug</p><p>Normalize.css：是模块化的</p><p>Normalize.css：拥有详细的文档</p><p>官网地址： <a href="http://necolas.github.io/normalize.css/" target="_blank" rel="noopener">http://necolas.github.io/normalize.css/</a></p><h4 id="43-移动端大量使用-css3盒子模型box-sizin"><a class="markdownIt-Anchor" href="#43-移动端大量使用-css3盒子模型box-sizin"></a> 4.3 移动端大量使用 CSS3盒子模型box-sizin</h4><p>传统模式宽度计算：盒子的宽度 = CSS中设置的width + border + padding</p><p>CSS3盒子模型：     盒子的宽度=  CSS中设置的宽度width 里面包含了 border 和 padding</p><p>也就是说，我们的CSS3中的盒子模型， padding 和 border 不会撑大盒子了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*CSS3盒子模型*&#x2F;</span><br><span class="line">box-sizing: border-box;</span><br><span class="line">&#x2F;*传统盒子模型*&#x2F;</span><br><span class="line">box-sizing: content-box;</span><br></pre></td></tr></table></figure><p>移动端可以全部CSS3 盒子模型</p><p>PC端如果完全需要兼容，我们就用传统模式，如果不考虑兼容性，我们就选择 CSS3 盒子模型</p><h4 id="44移动端特殊样式"><a class="markdownIt-Anchor" href="#44移动端特殊样式"></a> 4.4移动端特殊样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*CSS3盒子模型*&#x2F;</span><br><span class="line">box-sizing: border-box;</span><br><span class="line">-webkit-box-sizing: border-box;</span><br><span class="line">&#x2F;*点击高亮我们需要清除清除  设置为transparent 完成透明*&#x2F;</span><br><span class="line">-webkit-tap-highlight-color: transparent;</span><br><span class="line">&#x2F;*在移动端浏览器默认的外观在iOS上加上这个属性才能给按钮和输入框自定义样式*&#x2F;</span><br><span class="line">-webkit-appearance: none;</span><br><span class="line">&#x2F;*禁用长按页面时的弹出菜单*&#x2F;</span><br><span class="line">img,a &#123; -webkit-touch-callout: none; &#125;</span><br></pre></td></tr></table></figure><h3 id="50移动端常见布局"><a class="markdownIt-Anchor" href="#50移动端常见布局"></a> 5.0移动端常见布局</h3><p>移动端单独制作</p><ul><li>流式布局（百分比布局）</li><li>flex 弹性布局（强烈推荐）</li><li>less+rem+媒体查询布局</li><li>混合布局</li></ul><p>响应式</p><ul><li>媒体查询</li><li>bootstarp</li></ul><p>流式布局：</p><p>流式布局，就是百分比布局，也称非固定像素布局。</p><p>通过盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。</p><p>流式布局方式是移动web开发使用的比较常见的布局方式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;移动web开发流式布局&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#移动web开发流式布局&quot;&gt;&lt;/a&gt; 移动web开发流式布局&lt;/h1&gt;
&lt;h3 id=&quot;10-移动端基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="web前端布局" scheme="http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML列表与表单</title>
    <link href="http://yoursite.com/2018/02/03/05-%E5%88%97%E8%A1%A8%E5%92%8C%E8%A1%A8%E5%8D%95/"/>
    <id>http://yoursite.com/2018/02/03/05-%E5%88%97%E8%A1%A8%E5%92%8C%E8%A1%A8%E5%8D%95/</id>
    <published>2018-02-03T08:36:49.000Z</published>
    <updated>2018-02-03T09:47:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-列表标签重点"><a class="markdownIt-Anchor" href="#1-列表标签重点"></a> 1. 列表标签（重点）</h1><h2 id="学习目标"><a class="markdownIt-Anchor" href="#学习目标"></a> 学习目标</h2><ul><li>理解<ul><li>无序列表的应用场景</li><li>自定义列表的应用场景</li></ul></li><li>应用<ul><li>无序列表语法</li><li>自定义列表语法</li></ul></li></ul><p>问？</p><p>前面我们知道表格一般用于数据展示的，但是网页中还是有很多跟表格类似的布局，如下图~~ 我们用什么做呢？</p> <img src="/images/html基础/lili.png" /><p>答：</p><p>答案是列表， 那什么是列表？  表格是用来显示数据的，那么列表就是用来布局的。 因为非常整齐和自由</p> <img src="/images/html基础/list.png" /><ul><li><p>概念：</p><p>容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表</p></li><li><p>特点：</p><p>列表最大的特点就是  整齐 、整洁、 有序，跟表格类似，但是他可组合自由度会更高。</p></li></ul><h2 id="11-无序列表-ul-重点"><a class="markdownIt-Anchor" href="#11-无序列表-ul-重点"></a> 1.1 无序列表 ul （重点）</h2><p>无序列表的各个列表项之间没有顺序级别之分，是并列的。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>比如下面这些，新闻是没有顺序的，不用排队，先到先得，后发布先显示。</p> <img src="/images/html基础/ul.png" /><p><strong>脚下留心：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &lt;ul&gt;&lt;&#x2F;ul&gt;中只能嵌套&lt;li&gt;&lt;&#x2F;li&gt;，直接在&lt;ul&gt;&lt;&#x2F;ul&gt;标签中输入其他标签或者文字的做法是不被允许的。</span><br><span class="line">2. &lt;li&gt;与&lt;&#x2F;li&gt;之间相当于一个容器，可以容纳所有元素。</span><br><span class="line">3. 无序列表会带有自己样式属性，放下那个样式，一会让CSS来！</span><br></pre></td></tr></table></figure><h2 id="12-有序列表-ol-了解"><a class="markdownIt-Anchor" href="#12-有序列表-ol-了解"></a> 1.2  有序列表 ol （了解）</h2><img src="/images/html基础/gold.png" /><p>有序列表即为有排列顺序的列表，其各个列表项按照一定的顺序排列定义，有序列表的基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所有特性基本与ul 一致。  但是实际中比 无序列表 用的少很多。</p><h2 id="13-自定义列表理解"><a class="markdownIt-Anchor" href="#13-自定义列表理解"></a> 1.3 自定义列表（理解）</h2><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。其基本语法如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure> <img src="/images/html基础/2.jpg" /> <p>用的还可以：</p><img src="/images/html基础/mix.png" /><img src='/images/html基础/09自定义列表.jpg'><h2 id="14-列表总结"><a class="markdownIt-Anchor" href="#14-列表总结"></a> 1.4 列表总结</h2><table><thead><tr><th>标签名</th><th style="text-align:center">定义</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td><ul></ul></td><td style="text-align:center"><strong>无序标签</strong></td><td style="text-align:left">里面只能包含li    没有顺序，我们以后布局中最常用的列表</td></tr><tr><td><ol></ol></td><td style="text-align:center">有序标签</td><td style="text-align:left">里面只能包含li    有顺序， 使用情况较少</td></tr><tr><td><dl></dl></td><td style="text-align:center">自定义列表</td><td style="text-align:left">里面有2个兄弟， dt 和 dd</td></tr></tbody></table><p>我们现在还没有学布局，现在只要保证2个点：</p><ol><li>学会什么时候用无序列表， 学会什么时候用自定义列表</li><li>无序列表和自定义列表代码怎么写？</li><li>具体的我们刚才看的布局，等我们学了css 在来全面布局。</li></ol><h1 id="2-表单标签掌握"><a class="markdownIt-Anchor" href="#2-表单标签掌握"></a> 2. 表单标签(掌握)</h1><p>目标：</p><ul><li>能写出最常用的注册类表单</li><li>能说出input表单常见属性</li></ul><p>现实中的表单，类似我们去银行办理信用卡填写的单子。 如下图</p><img src="/images/html基础/car.jpg"  width="500" /><p>**作用： **</p><p>表单目的是为了收集用户信息。</p><p>在我们网页中， 我们也需要跟用户进行交互，收集用户资料，此时也需要表单。</p><blockquote><p>在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。</p></blockquote><img src="media/bd.png" /><p>**表单控件： **</p><p>​       包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p><p><strong>提示信息：</strong></p><p>​        一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p><p><strong>表单域：</strong></p><p>​      他相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p><h2 id="21-input-控件重点"><a class="markdownIt-Anchor" href="#21-input-控件重点"></a> 2.1 input 控件(重点)</h2><ul><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"属性值"</span> <span class="attr">value</span>=<span class="string">"你好"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input 输入的意思</li><li>&lt;input /&gt;标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型</li><li>除了type属性还有别的属性</li></ul></li><li><p>常用属性：</p></li></ul><img src="/images/html基础/input.png" /><h4 id="1-type-属性"><a class="markdownIt-Anchor" href="#1-type-属性"></a> 1. type 属性</h4><ul><li>这个属性通过改变值，可以决定了你属于那种input表单。</li><li>比如 type = ‘text’  就表示 文本框 可以做 用户名， 昵称等。</li><li>比如 type = ‘password’  就是表示密码框   用户输入的内容 是不可见的。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> /&gt;</span> </span><br><span class="line">密  码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-value属性-值"><a class="markdownIt-Anchor" href="#2-value属性-值"></a> 2. value属性   值</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>value 默认的文本值。 有些表单想刚打开页面就默认显示几个文字，就可以通过这个value 来设置。</li></ul><h4 id="3-name属性"><a class="markdownIt-Anchor" href="#3-name属性"></a> 3. name属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">name</span>=<span class="string">“username”</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>name表单的名字， 这样，后台可以通过这个name属性找到这个表单。  页面中的表单很多，name主要作用就是用于区别不同的表单。</p><ul><li><p>name属性后面的值，是我们自己定义的。</p></li><li><p>radio  如果是一组，我们必须给他们命名相同的名字 name   这样就可以多个选其中的一个啦</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>  /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><ul><li>name属性，我们现在用的较少， 但是，当我们学ajax 和后台的时候，是必须的。</li></ul><h4 id="4-checked属性"><a class="markdownIt-Anchor" href="#4-checked属性"></a> 4. checked属性</h4><ul><li>表示默认选中状态。  较常见于 单选按钮和复选按钮。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性    别:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"女"</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><p>上面这个，表示就默认选中了 男 这个单选按钮</p><h4 id="5-input-属性小结"><a class="markdownIt-Anchor" href="#5-input-属性小结"></a> 5. input 属性小结</h4><table><thead><tr><th>属性</th><th style="text-align:left">说明</th><th>作用</th></tr></thead><tbody><tr><td>type</td><td style="text-align:left">表单类型</td><td>用来指定不同的控件类型</td></tr><tr><td>value</td><td style="text-align:left">表单值</td><td>表单里面默认显示的文本</td></tr><tr><td>name</td><td style="text-align:left">表单名字</td><td>页面中的表单很多，name主要作用就是用于区别不同的表单。</td></tr><tr><td>checked</td><td style="text-align:left">默认选中</td><td>表示那个单选或者复选按钮一开始就被选中了</td></tr></tbody></table><h2 id="22-label标签理解"><a class="markdownIt-Anchor" href="#22-label标签理解"></a> 2.2 label标签(理解)</h2><p><strong>目标：</strong></p><p>label标签主要目的是为了提高用户体验。 为用户提高最优秀的服务。</p><p><strong>概念：</strong></p><p>label 标签为 input 元素定义标注（标签）。</p><p><strong>作用：</strong></p><p>用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点。</p><p><strong>如何绑定元素呢？</strong></p><ol><li>第一种用法就是用label直接包括input表单。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span> 用户名： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"usename"</span> <span class="attr">value</span>=<span class="string">"请输入用户名"</span>&gt;</span>   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><p>适合单个表单选择</p><ol start="2"><li>第二种用法 for 属性规定 label 与哪个表单元素绑定。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"sex"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>  <span class="attr">id</span>=<span class="string">"sex"</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>当我们鼠标点击 label标签里面的文字时， 光标会定位到指定的表单里面</p></blockquote><h2 id="23-textarea控件文本域"><a class="markdownIt-Anchor" href="#23-textarea控件文本域"></a> 2.3 textarea控件(文本域)</h2><img src="/images/html基础/textarea.png" /><ul><li>语法：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> &gt;</span></span><br><span class="line">  文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>作用：</p><p>通过textarea控件可以轻松地创建多行文本输入框.</p><p>cols=“每行中的字符数” rows=“显示的行数”  我们实际开发不用</p></li></ul><h4 id="文本框和文本域区别"><a class="markdownIt-Anchor" href="#文本框和文本域区别"></a> 文本框和文本域区别</h4><table><thead><tr><th style="text-align:left">表单</th><th style="text-align:center">名称</th><th style="text-align:center">区别</th><th style="text-align:right">默认值显示</th><th style="text-align:right">用于场景</th></tr></thead><tbody><tr><td style="text-align:left">input type=“text”</td><td style="text-align:center">文本框</td><td style="text-align:center">只能显示一行文本</td><td style="text-align:right">单标签，通过value显示默认值</td><td style="text-align:right">用户名、昵称、密码等</td></tr><tr><td style="text-align:left">textarea</td><td style="text-align:center">文本域</td><td style="text-align:center">可以显示多行文本</td><td style="text-align:right">双标签，默认值写到标签中间</td><td style="text-align:right">留言板</td></tr></tbody></table><h2 id="24-select下拉列表"><a class="markdownIt-Anchor" href="#24-select下拉列表"></a> 2.4 select下拉列表</h2><p><strong>目的：</strong></p><p>如果有多个选项让用户选择，为了节约空间，我们可以使用select控件定义下拉列表.</p><img src="/images/html基础/sele.png" /><p><strong>语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><ol><li>&lt;select&gt;  中至少包含一对 option</li><li>在option 中定义selected =&quot; selected &quot;时，当前项即为默认选中项。</li><li>但是我们实际开发会用的比较少</li></ol><h1 id="3-form表单域"><a class="markdownIt-Anchor" href="#3-form表单域"></a> 3. form表单域</h1><ul><li><p>收集的用户信息怎么传递给服务器？</p><p>通过form表单域</p></li><li><p>目的：</p><p>在HTML中，form标签被用于定义表单域，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。</p></li></ul><p>**语法: **</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"url地址"</span> <span class="attr">method</span>=<span class="string">"提交方式"</span> <span class="attr">name</span>=<span class="string">"表单名称"</span>&gt;</span></span><br><span class="line">  各种表单控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>常用属性：</strong></p><table><thead><tr><th>属性</th><th style="text-align:left">属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td style="text-align:left">url地址</td><td>用于指定接收并处理表单数据的服务器程序的url地址。</td></tr><tr><td>method</td><td style="text-align:left">get/post</td><td>用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td>name</td><td style="text-align:left">名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单。</td></tr></tbody></table><p><strong>注意:</strong></p><p>每个表单都应该有自己表单域。我们现在做页面，不写看不到效果，但是 如果后面学 ajax 后台交互的时候，必须需要 form表单域。</p><h2 id="26-团队约定"><a class="markdownIt-Anchor" href="#26-团队约定"></a> 2.6 团队约定</h2><h3 id="元素属性"><a class="markdownIt-Anchor" href="#元素属性"></a> 元素属性</h3><ul><li>元素属性值使用双引号语法</li><li>元素属性值可以写上的都写上</li></ul><p><em>推荐：</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">text</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">checked</span> /&gt;</span></span><br></pre></td></tr></table></figure><h1 id="4综合案例注册页面"><a class="markdownIt-Anchor" href="#4综合案例注册页面"></a> 4.综合案例（注册页面）</h1><img src="/images/html基础/bdd.png"/><h1 id="5-查文档"><a class="markdownIt-Anchor" href="#5-查文档"></a> 5. 查文档</h1><p>经常查阅文档是一个非常好的学习习惯。</p><p>W3C :  <a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">http://www.w3school.com.cn/</a></p><p>MDN: <a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/</a></p><h1 id="6-总结"><a class="markdownIt-Anchor" href="#6-总结"></a> 6. 总结</h1><img src="media/guifan.png" />]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-列表标签重点&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-列表标签重点&quot;&gt;&lt;/a&gt; 1. 列表标签（重点）&lt;/h1&gt;
&lt;h2 id=&quot;学习目标&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#学习目标
      
    
    </summary>
    
    
      <category term="html基础" scheme="http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML表格</title>
    <link href="http://yoursite.com/2018/01/26/04-%E8%A1%A8%E6%A0%BC%20table(%E4%BC%9A%E4%BD%BF%E7%94%A8)/"/>
    <id>http://yoursite.com/2018/01/26/04-%E8%A1%A8%E6%A0%BC%20table(%E4%BC%9A%E4%BD%BF%E7%94%A8)/</id>
    <published>2018-01-26T08:36:49.000Z</published>
    <updated>2018-01-26T09:46:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="表格-table会使用"><a class="markdownIt-Anchor" href="#表格-table会使用"></a> 表格 table(会使用)</h1><p>目标：</p><ul><li>理解：<ul><li>能说出表格用来做什么的</li><li>表格的基本结构组成</li></ul></li><li>应用：<ul><li>能够熟练写出n行n列的表格</li><li>能简单的合并单元格<br />​</li></ul></li></ul><img src="/images/html基础/ttt.png"  width="600" /><p><strong>表格作用：</strong></p><p>存在即是合理的。  表格的现在还是较为常用的一种标签，但不是用来布局，<strong>常见显示、展示表格式数据。</strong></p><p>因为它可以让数据显示的非常的规整，可读性非常好。</p><p><strong>特别是后台展示数据的时候表格运用是否熟练就显得很重要</strong>，一个清爽简约的表格能够把繁杂的数据表现得很有条理，虽然 div 布局也可以做到，但是总没有表格来得方便。</p><img src="/images/html基础/table.png" /><p>ps:  这些地方用表格，你会觉得生活还是那么美好。。。。忍不住想说  PPAP i hava a pen</p><h2 id="1-创建表格"><a class="markdownIt-Anchor" href="#1-创建表格"></a> 1. 创建表格</h2><p>在HTML网页中，要想创建表格，就需要使用表格相关的标签。</p><p><strong>创建表格的基本语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要深刻体会表格、行、单元格他们的构成。</p><p>在上面的语法中包含基本的三对HTML标签，分别为 table、tr、td，他们是创建表格的基本标签，缺一不可，下面对他们进行具体地解释</p><ol><li><p>table用于定义一个表格标签。</p></li><li><p>tr标签 用于定义表格中的行，必须嵌套在 table标签中。</p></li><li><p>td 用于定义表格中的单元格，必须嵌套在<tr></tr>标签中。</p></li><li><p>字母 td 指表格数据（table data），即数据单元格的内容，现在我们明白，表格最合适的地方就是用来存储数据的。</p><p>​</p></li></ol><img src='/images/html基础/07table基本结构.jpg'><p>**总结： **</p><ul><li>表格的主要目的是用来显示特殊数据的</li><li>一个完整的表格有表格标签（table），行标签（tr），单元格标签（td）组成，没有列的标签</li></ul><ul><li><tr></tr>中只能嵌套<td></td> 类的单元格</li><li><td></td>标签，他就像一个容器，可以容纳所有的元素</li></ul><h2 id="2-表格属性"><a class="markdownIt-Anchor" href="#2-表格属性"></a> 2. 表格属性</h2><p>表格有部分属性我们不常用，这里重点记住 cellspacing 、 cellpadding。</p><img src="/images/html基础/tt.png" /><p>我们经常有个说法，是三参为0，  平时开发的我们这三个参数    border  cellpadding  cellspacing  为  0</p><img src='/images/html基础/07table表格属性.jpg'><p><strong>案例1：</strong></p><img src='/images/html基础/表格效果01.png'><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellpadding</span>=<span class="string">"20"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span>   <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span>  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  <span class="tag">&lt;<span class="name">td</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>55<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  <span class="tag">&lt;<span class="name">td</span>&gt;</span>郭富城<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>52<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  <span class="tag">&lt;<span class="name">td</span>&gt;</span>张学友<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>58<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  <span class="tag">&lt;<span class="name">td</span>&gt;</span>黎明<span class="tag">&lt;/<span class="name">td</span>&gt;</span>   <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  <span class="tag">&lt;<span class="name">td</span>&gt;</span>刘晓庆<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>63<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-表头单元格标签th"><a class="markdownIt-Anchor" href="#3-表头单元格标签th"></a> 3. 表头单元格标签th</h2><ul><li>作用：<ul><li>一般表头单元格位于表格的第一行或第一列，并且文本加粗居中</li></ul></li><li>语法：<ul><li>只需用表头标签&lt;th&gt;&lt;/th&gt;替代相应的单元格标签&lt;td&gt;&lt;/td&gt;即可。</li></ul></li></ul> <img src="/images/html基础/th.png" /><p><strong>案例2：</strong></p><p>​效果图</p><img src="/images/html基础/tht.png" /><p>​代码：</p><hr /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>小王<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>110<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>120<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>th 也是一个单元格   只不过和普通的 td单元格不一样，它会让自己里面的文字居中且加粗</p></blockquote><h2 id="4-表格标题caption"><a class="markdownIt-Anchor" href="#4-表格标题caption"></a> 4. 表格标题caption</h2><p><strong>定义和用法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>**注意： **</p><ol><li>caption 元素定义<strong>表格标题</strong>，通常这个标题会被居中且显示于表格之上。</li><li>caption 标签必须紧随 table 标签之后。</li><li>这个标签只存在 表格里面才有意义。你是风儿我是沙</li></ol><p><strong>案例3：</strong></p><p>根据要求完成以下案例：</p><img src="/images/html基础/pa.png" /><h2 id="5-合并单元格难点"><a class="markdownIt-Anchor" href="#5-合并单元格难点"></a> 5. 合并单元格(难点)</h2><p>合并单元格是我们比较常用的一个操作，但是不会合并的很复杂。</p><img src="/images/html基础/he.jpg" /><h3 id="51-合并单元格2种方式"><a class="markdownIt-Anchor" href="#51-合并单元格2种方式"></a> 5.1 合并单元格2种方式</h3><ul><li>跨行合并：rowspan=“合并单元格的个数”</li><li>跨列合并：colspan=“合并单元格的个数”</li></ul><img src='/images/html基础/08table合并单元格.jpg'><h3 id="52-合并单元格顺序"><a class="markdownIt-Anchor" href="#52-合并单元格顺序"></a> 5.2 合并单元格顺序</h3><blockquote><p>**合并的顺序我们按照   先上 后下     先左  后右 的顺序 **</p></blockquote><p>跟我们以前学习汉字的书写顺序完全一致。</p><h3 id="53-合并单元格三步曲"><a class="markdownIt-Anchor" href="#53-合并单元格三步曲"></a> 5.3 合并单元格三步曲</h3><ol><li>先确定是跨行还是跨列合并</li><li>根据 先上 后下   先左  后右的原则找到目标单元格    然后写上 合并方式 还有 要合并的单元格数量  比如 ： <td colspan="3">   </td></li><li>删除多余的单元格 单元格</li></ol><h2 id="6-总结表格"><a class="markdownIt-Anchor" href="#6-总结表格"></a> 6. 总结表格</h2><table><thead><tr><th>标签名</th><th style="text-align:left">定义</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td><table></table></td><td style="text-align:left">表格标签</td><td style="text-align:left">就是一个四方的盒子</td></tr><tr><td><tr></tr></td><td style="text-align:left">表格行标签</td><td style="text-align:left">行标签要再table标签内部才有意义</td></tr><tr><td><td></td></td><td style="text-align:left">单元格标签</td><td style="text-align:left">单元格标签是个容器级元素，可以放任何东西</td></tr><tr><td><th></th></td><td style="text-align:left">表头单元格标签</td><td style="text-align:left">它还是一个单元格，但是里面的文字会居中且加粗</td></tr><tr><td><caption></caption></td><td style="text-align:left">表格标题标签</td><td style="text-align:left">表格的标题，跟着表格一起走，和表格居中对齐</td></tr><tr><td>clospan 和 rowspan</td><td style="text-align:left">合并属性</td><td style="text-align:left">用来合并单元格的</td></tr></tbody></table><ol><li>表格提供了HTML 中定义表格式数据的方法。</li><li>表格中由行中的单元格组成。</li><li>表格中没有列元素，列的个数取决于行的单元格个数。</li><li>表格不要纠结于外观，那是CSS 的作用。</li><li>表格的学习要求：  能手写表格结构，并且能简单合并单元格。</li></ol><h2 id="7-拓展阅读"><a class="markdownIt-Anchor" href="#7-拓展阅读"></a> 7. 拓展阅读@</h2><h3 id="表格划分结构了解"><a class="markdownIt-Anchor" href="#表格划分结构了解"></a> 表格划分结构（了解）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对于比较复杂的表格，表格的结构也就相对的复杂了，所以又将表格分割成三个部分：题头、正文和脚注。而这三部分分别用:thead,tbody,tfoot来标注， 这样更好的分清表格结构</span><br></pre></td></tr></table></figure><img src="/images/html基础/thead.png" /><p><strong>注意：</strong></p><ol><li><thead></thead>：用于定义表格的头部。用来放标题之类的东西。<thead> 内部必须拥有 <tr> 标签！</li><li><tbody></tbody>：用于定义表格的主体。放数据本体 。</li><li><tfoot></tfoot>放表格的脚注之类。</li><li>以上标签都是放到table标签中。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;表格-table会使用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#表格-table会使用&quot;&gt;&lt;/a&gt; 表格 table(会使用)&lt;/h1&gt;
&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解：
&lt;ul&gt;
&lt;li&gt;能说出表格用来做什么的&lt;/
      
    
    </summary>
    
    
      <category term="html基础" scheme="http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML常用标签</title>
    <link href="http://yoursite.com/2018/01/14/03-HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/01/14/03-HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</id>
    <published>2018-01-14T08:36:49.000Z</published>
    <updated>2018-01-14T09:57:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-html常用标签"><a class="markdownIt-Anchor" href="#1-html常用标签"></a> 1. HTML常用标签</h1><p>首先 HTML和CSS是两种完全不同的语言，我们学的是结构，就只写HTML标签，认识标签就可以了。 不会再给结构标签指定样式了。</p><p>HTML标签有很多，这里我们学习最为常用的，后面有些较少用的，我们可以查下手册就可以了。</p><h2 id="11-排版标签"><a class="markdownIt-Anchor" href="#11-排版标签"></a> 1.1 排版标签</h2><p>排版标签主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p><h3 id="1标题标签h-熟记"><a class="markdownIt-Anchor" href="#1标题标签h-熟记"></a> 1）标题标签h (熟记)</h3><p>单词缩写：  head   头部. 标题       title  文档标题</p><p>为了使网页更具有语义化，我们经常会在页面中用到标题标签，HTML提供了6个等级的标题，即</p><p><strong>标题标签语义：</strong>  作为标题使用，并且依据重要性递减</p><p>其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示效果如下：</p>  <img src="/images/html基础/h.png" /><p><strong>小结 :</strong></p><ul><li>加了标题的文字会变的加粗，字号也会依次变大</li><li>一行是只能放一个标题的</li></ul><h3 id="2段落标签p-熟记"><a class="markdownIt-Anchor" href="#2段落标签p-熟记"></a> 2）段落标签p ( 熟记)</h3><p>单词缩写：  paragraph  段落  [ˈpærəgræf]    无须记这个单词</p><p><strong>作用语义：</strong></p><p>可以把 HTML 文档分割为若干段落</p><p>在网页中要把文字有条理地显示出来，离不开段落标签，就如同我们平常写文章一样，整个网页也可以分为若干个段落，而段落的标签就是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>  文本内容  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>是HTML文档中最常见的标签，默认情况下，文本在一个段落中会根据浏览器窗口的大小自动换行。</p><h3 id="3水平线标签hr认识"><a class="markdownIt-Anchor" href="#3水平线标签hr认识"></a> 3）水平线标签hr(认识)</h3><p>单词缩写：  horizontal  横线    [ˌhɔrəˈzɑntl]    同上</p><p>在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标签来完成，<hr />就是创建横跨网页水平线的标签。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>是单标签</span><br></pre></td></tr></table></figure><p>在网页中显示默认样式的水平线。</p><p>练习:新闻页面</p><img src="/images/html基础/sh.png" /> <h3 id="4换行标签br-熟记"><a class="markdownIt-Anchor" href="#4换行标签br-熟记"></a> 4）换行标签br (熟记)</h3><p>单词缩写：  break   打断 ,换行</p><p>在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后自动换行。如果希望某段文本强制换行显示，就需要使用换行标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这时如果还像在word中直接敲回车键换行就不起作用了。</p><p>此处有练习题</p><h3 id="5div-和-span标签重点"><a class="markdownIt-Anchor" href="#5div-和-span标签重点"></a> 5）div 和  span标签(重点)</h3><p>div   span    是没有语义的     是我们网页布局主要的2个盒子   想必你听过  css+div</p><p>div 就是  division  的缩写   分割， 分区的意思  其实有很多div 来组合网页。</p><p>span   跨度，跨距；范围</p><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> 这是头部 <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    <span class="tag">&lt;<span class="name">span</span>&gt;</span>今日价格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>他们两个都是盒子，用来装我们网页元素的， 只不过他们有区别，现在我们记住</p><ul><li>div标签  用来布局的，但是现在一行只能放一个div</li><li>span标签  用来布局的，一行上可以放好多个span</li></ul><p>后面后面讲显示模式的时候，会告诉大家</p><h3 id="排版标签总结"><a class="markdownIt-Anchor" href="#排版标签总结"></a> 排版标签总结</h3><table><thead><tr><th>标签名</th><th style="text-align:left">定义</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td><hx></hx></td><td style="text-align:left">标题标签</td><td style="text-align:left">作为标题使用，并且依据重要性递减</td></tr><tr><td><p></p></td><td style="text-align:left">段落标签</td><td style="text-align:left">可以把 HTML 文档分割为若干段落</td></tr><tr><td><hr /></td><td style="text-align:left">水平线标签</td><td style="text-align:left">没啥可说的，就是一条线</td></tr><tr><td><br /></td><td style="text-align:left">换行标签</td><td style="text-align:left"></td></tr><tr><td><div></div></td><td style="text-align:left">div标签</td><td style="text-align:left">用来布局的，但是现在一行只能放一个div</td></tr><tr><td><span></span></td><td style="text-align:left">span标签</td><td style="text-align:left">用来布局的，一行上可以放好多个span</td></tr></tbody></table><h2 id="12-文本格式化标签熟记"><a class="markdownIt-Anchor" href="#12-文本格式化标签熟记"></a> 1.2 文本格式化标签(熟记)</h2><p>在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p><img src="/images/html基础/tab.png" /><p><strong>区别：</strong></p><p>b  只是加粗        strong  除了可以加粗还有 强调的意思，  语义更强烈。</p><p>剩下的同理…</p><h2 id="13-标签属性"><a class="markdownIt-Anchor" href="#13-标签属性"></a> 1.3 标签属性</h2> <img src="/images/html基础/ttt.jpg" width="300"  /><p>所谓属性就是<strong>外在特性</strong>  比如 手机的颜色 手机的尺寸 ，总结就是手机的。。</p><ul><li>手机的颜色是黑色</li><li>手机的尺寸是 8寸</li><li>水平线的长度是 200</li><li>图片的宽度 是  300</li></ul><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> 属性<span class="attr">1</span>=<span class="string">"属性值1"</span> 属性<span class="attr">2</span>=<span class="string">"属性值2"</span> …&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">手机</span> 颜色=<span class="string">"红色"</span> 大小=<span class="string">"5寸"</span>&gt;</span>  <span class="tag">&lt;/<span class="name">手机</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提倡：   尽量不使用 样式属性。   <img src="/images/html基础/sm.jpg" /></p><h2 id="14-图像标签img-重点"><a class="markdownIt-Anchor" href="#14-图像标签img-重点"></a> 1.4 图像标签img (重点)</h2><p>单词缩写：   image  图像</p><p>要想在网页中显示图像就需要使用图像标签，接下来将详细介绍图像标签<img />以及和他相关的属性。（它是一个单身狗）</p><p>语法如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图像URL"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>该语法中src属性用于指定图像文件的路径和文件名，他是img标签的必需属性。</p><img src="/images/html基础/img.png" /><p>border 后面我们会用css来做，这里就记住这个border 单词就好了</p><p>**注意: **</p><ol><li>标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</li><li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li><li>任何标签的属性都有默认值，省略该属性则取默认值。</li><li>采取  键值对 的格式   key=“value”  的格式</li></ol><p>比如:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">正常的<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"cz.jpg"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"300"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    带有边框的<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"cz.jpg"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">border</span>=<span class="string">"3"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">有提示文本的<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"cz.jpg"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">border</span>=<span class="string">"3"</span> <span class="attr">title</span>=<span class="string">"这是个小蒲公英"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">有替换文本的<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"cz.jpg"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">border</span>=<span class="string">"3"</span> <span class="attr">alt</span>=<span class="string">"图片不存在"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>此处有练习题</p><p><strong>重点掌握点：</strong></p><ul><li>[ ] 请说出 图像标签那个属性是必须要写的？  img  src 图片的路径</li><li>[ ] 请说出 图像标签中 alt 和  title 属性区别？ alt 图片显示不出，文字就显示     title 鼠标经过图片的时候显示文字</li></ul><h2 id="15-链接标签重点"><a class="markdownIt-Anchor" href="#15-链接标签重点"></a> 1.5 链接标签(重点)</h2><p>单词缩写：  anchor 的缩写  [ˈæŋkə®] 。基本解释 锚, 铁锚 的</p><p>在HTML中创建超链接非常简单，只需用标签把文字包括起来就好。</p><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"跳转目标"</span> <span class="attr">target</span>=<span class="string">"目标窗口的弹出方式"</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td>href</td><td style="text-align:left">用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能</td></tr><tr><td>target</td><td style="text-align:left">用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，_blank为在新窗口中打开方式。</td></tr></tbody></table><p><strong>注意：</strong></p><ol><li>外部链接 需要添加 http:// <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></li><li>内部链接 直接链接内部页面名称即可 比如 &lt; a href=“index.html”&gt; 首页 </a ></li><li>如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href=&quot;#&quot;)，表示该链接暂时为一个空链接。</li><li>不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</li></ol><p><strong>重点掌握点：</strong></p><ul><li>[ ] 请说出 链接标签那个属性是必须要写的？  href</li><li>[ ] 请说出 如何新窗口打开这个一个链接网页的？ target=“_blank”</li></ul><h2 id="16-注释标签"><a class="markdownIt-Anchor" href="#16-注释标签"></a> 1.6 注释标签</h2><p>在HTML中还有一种特殊的标签——注释标签。如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。</p><p>简单解释：</p><p>注释内容不会显示在浏览器窗口中，但是作为HTML文档内容的一部分，也会被下载到用户的计算机上，查看源代码时就可以看到。</p><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span>     快捷键是：    ctrl + /       或者 ctrl +shift + /</span><br></pre></td></tr></table></figure><p>注释重要性：</p><img src="/images/html基础/zs.png" /><blockquote><p>注释是给人看的，目的是为了更好的解释这部分代码是干啥的， 程序是不执行这个代码的</p></blockquote><h3 id="团队约定"><a class="markdownIt-Anchor" href="#团队约定"></a> 团队约定</h3><p>一般用于简单的描述，如某些状态描述、属性描述等</p><p>注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行</p><p><em>推荐：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Comment Text --&gt;</span><br><span class="line">&lt;div&gt;...&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;...&lt;&#x2F;div&gt;&lt;!-- Comment Text --&gt;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;&lt;!-- Comment Text --&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h1 id="2-路径重点-难点"><a class="markdownIt-Anchor" href="#2-路径重点-难点"></a> 2. 路径(重点、难点)</h1><img src="/images/html基础/dt.png" width="400" /><p>实际工作中，我们的文件不能随便乱放，否则用起来很难快速的找到他们，因此我们需要一个文件夹来管理他们。</p><p>**目录文件夹： **</p><p>就是普通文件夹，里面只不过存放了我们做页面所需要的 相关素材，比如 html文件， 图片 等等。</p> <img src="/images/html基础/g.png" /><p>**根目录 **</p><p>打开目录文件夹的第一层  就是 根目录</p> <img src="/images/html基础/gg.png" /><p>页面中的图片会非常多， 通常我们再新建一个文件夹专门用于存放图像文件（images），这时再插入图像，就需要采用“路径”的方式来指定图像文件的位置。路径可以分为： 相对路径和绝对路径</p><h2 id="相对路径"><a class="markdownIt-Anchor" href="#相对路径"></a> 相对路径</h2><p>以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。</p><table><thead><tr><th>路径分类</th><th style="text-align:center">符号</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>同一级路径</td><td style="text-align:center"></td><td style="text-align:left">只需输入图像文件的名称即可，如&lt;img src=“baidu.gif” /&gt;。<img src='./media/04路径同目录.jpg'></td></tr><tr><td>下一级路径</td><td style="text-align:center">“/”</td><td style="text-align:left">图像文件位于HTML文件同级文件夹下（例如文件夹名称为：images）                         如&lt;img src=“images/baidu.gif” /&gt;。  <img  src='/images/html基础/05路径不同.jpg'/></td></tr><tr><td>上一级路径</td><td style="text-align:center">“…/”</td><td style="text-align:left">在文件名之前加入“…/” ，如果是上两级，则需要使用 “…/ …/”，以此类推，                    如&lt;img src=&quot;…/baidu.gif&quot; /&gt;。 <img  src='/images/html基础/06路径不同.jpg'/></td></tr></tbody></table><blockquote><p>相对路径，是从代码所在的这个文件出发， 去寻找我们的目标文件的，而 我们所说的 上一级 下一级 同一级  简单说，就是 图片 位于 HTML 页面的位置</p></blockquote><h2 id="绝对路径"><a class="markdownIt-Anchor" href="#绝对路径"></a> 绝对路径</h2><p>绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的。</p><p>“D:\web\img\logo.gif”，或完整的网络地址，例如“<a href="http://www.itcast.cn/images/logo.gif%E2%80%9D%E3%80%82" target="_blank" rel="noopener">http://www.itcast.cn/images/logo.gif”。</a></p><p><strong>注意：</strong></p><p>绝对路径用的较少，我们理解下就可以了。  但是要注意，它的写法 特别是符号  \  并不是 相对路径的   /</p><h1 id="3-拓展阅读"><a class="markdownIt-Anchor" href="#3-拓展阅读"></a> 3. @拓展阅读</h1><h4 id="31-锚点定位-难点"><a class="markdownIt-Anchor" href="#31-锚点定位-难点"></a> 3.1 锚点定位 （难点）</h4><p>通过创建锚点链接，用户能够快速定位到目标内容。</p><p>创建锚点链接分为两步：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 使用相应的id名标注跳转目标的位置。 (找目标)</span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">"two"</span>&gt;</span>第2集<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">2. 使用<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#id名"</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span>创建链接文本（被点击的） （拉关系）  我也有一个姓毕的姥爷..</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#two"</span>&gt;</span></span><br></pre></td></tr></table></figure> <img src="C:/Users/itcast/Desktop/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80HTML%E7%AC%AC%E4%B8%80%E5%A4%A9/%E7%AC%94%E8%AE%B0/media/03a%E7%9B%AE%E6%A0%87.jpg"><p>快速记忆法：</p><p>好比找个人办事，  首先找到他，然后拉关系，最后看效果。</p><h4 id="32-base-标签"><a class="markdownIt-Anchor" href="#32-base-标签"></a> 3.2 base 标签</h4><p><strong>语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_blank"</span> /&gt;</span></span><br></pre></td></tr></table></figure><img src="C:/Users/itcast/Desktop/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80HTML%E7%AC%AC%E4%B8%80%E5%A4%A9/%E7%AC%94%E8%AE%B0/media/base.png" /><p>**总结： **</p><ol><li>base 可以设置整体链接的打开状态</li><li>base 写到  <head>  <meta name="generator" content="Hexo 4.2.0"><link rel="alternate" href="/atom.xml" title="赵晓亮" type="application/atom+xml"></head>  之间</li><li>把所有的连接 都默认添加 target=&quot;_blank&quot;</li></ol><h4 id="33-预格式化文本pre标签"><a class="markdownIt-Anchor" href="#33-预格式化文本pre标签"></a> 3.3 预格式化文本pre标签</h4><pre> 标签可定义预格式化的文本。被包围在 <pre> 标签 元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  此例演示如何使用 pre 标签</span><br><span class="line"></span><br><span class="line">  对空行和 空格</span><br><span class="line"></span><br><span class="line">  进行控制</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>**pink老师 一句话说出他们:**> 所谓的预格式化文本就是 ，按照我们预先写好的文字格式来显示页面， 保留空格和换行等。 有了这个标签，里面的文字，会按照我们书写的模式显示，不需要段落和换行标签了。但是，比较少用，因为不好整体控制。#### 3.4 特殊字符 （理解） 一些特殊的符号，我们再html 里面很难或者 不方便直接 使用， 我们此时可以使用下面的替代代码。<img src="/images/html基础/zifu.png" />**虽然有很多，但是我们平时用的比较较少， 大家重点记住   空格    大于号 小于号   就可以了，剩下的回来查阅。****总结：**1. 是以**运算符**`&`开头,以**分号运算符**`;`结尾。2. 他们不是标签，而是符号。3. HTML 中不能使用小于号 “<” 和大于号 “>”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体**团队约定**   *推荐：*<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;#&quot;&gt;more &gt;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>   *不推荐：*<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;#&quot;&gt;more &gt;&gt; &lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>#### 3.5 html5发展之路 <img src="/images/html基础/html5.png" width="600"/>#### 3.6 什么是XHTMLXHTML 是更严格更纯净的 HTML 代码。- XHTML 指**可扩展超文本标签语言**（EXtensible HyperText Markup Language）。- XHTML 的目标是取代 HTML。- XHTML 与 HTML 4.01 几乎是相同的。- XHTML 是更严格更纯净的 HTML 版本。- XHTML 是作为一种 XML 应用被重新定义的 HTML。- XHTML 是一个 W3C 标准。#### 3.7 HTML和 XHTML之间有什么区别?- XHTML 指的是可扩展超文本标记语言- XHTML 与 HTML 4.01 几乎是相同的- XHTML 是更严格更纯净的 HTML 版本- XHTML 是以 XML 应用的方式定义的 HTML- XHTML 是 2001 年 1 月发布的 W3C 推荐标准- XHTML 得到所有主流浏览器的支持- XHTML 元素是以 XML 格式编写的 HTML 元素。XHTML是严格版本的HTML，例如它要求标签必须小写，标签必须被正确关闭，标签顺序必须正确排列，对于属性都必须使用双引号等。# 4. @深入阅读[HTML5的崛起之路](http://www.chinaz.com/manage/2015/0720/424831.shtml)]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-html常用标签&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-html常用标签&quot;&gt;&lt;/a&gt; 1. HTML常用标签&lt;/h1&gt;
&lt;p&gt;首先 HTML和CSS是两种完全不同的语言，我们学的是结构，就只写HTML标签，认识标签就可以
      
    
    </summary>
    
    
      <category term="html基础" scheme="http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML初识</title>
    <link href="http://yoursite.com/2018/01/11/02-%E8%AE%A4%E8%AF%86HTML/"/>
    <id>http://yoursite.com/2018/01/11/02-%E8%AE%A4%E8%AF%86HTML/</id>
    <published>2018-01-11T08:36:49.000Z</published>
    <updated>2018-01-11T09:54:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-html-初识"><a class="markdownIt-Anchor" href="#1-html-初识"></a> 1. HTML 初识</h1><ul><li>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)是用来描述网页的一种语言。</li><li>H（很）T（甜）M（蜜）L（啦）</li><li>HTML 不是一种编程语言，而是一种标记语言 (markup language)</li><li>标记语言是一套标记标签 (markup tag)</li></ul><p><strong>所谓超文本，有2层含义：</strong></p><ol><li>因为它可以加入图片、声音、动画、多媒体等内容（**超越文本限制 **）</li><li>不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（**超级链接文本 **）。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 我是一个大标题 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>门外汉眼中的效果页面</strong></p><img src="/images/html基础/title1.png"  /><p><strong>我们要做的html页面</strong></p><img src="/images/html基础/title.png" /><h2 id="11-html骨架格式"><a class="markdownIt-Anchor" href="#11-html骨架格式"></a> 1.1 HTML骨架格式</h2><p>日常生活的书信，我们要遵循共同的约定。</p><img src="/images/html基础/mess.png" alt=""><p>同理：HTML 有自己的语言语法骨架格式：（要遵循，要专业） 要求务必非常流畅的默写下来。。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="html骨架标签总结"><a class="markdownIt-Anchor" href="#html骨架标签总结"></a> html骨架标签总结</h4><table><thead><tr><th>标签名</th><th style="text-align:center">定义</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td><html></html></td><td style="text-align:center">HTML标签</td><td style="text-align:left">页面中最大的标签，我们成为  根标签</td></tr><tr><td><head></head></td><td style="text-align:center">文档的头部</td><td style="text-align:left">注意在head标签中我们必须要设置的标签是title</td></tr><tr><td><titile></title></td><td style="text-align:center">文档的标题</td><td style="text-align:left">让页面拥有一个属于自己的网页标题</td></tr><tr><td><body></body></td><td style="text-align:center">文档的主体</td><td style="text-align:left">元素包含文档的所有内容，页面内容 基本都是放到body里面的</td></tr><tr><td><titile></title></td><td style="text-align:center">文档的标题</td><td style="text-align:left">让页面拥有一个属于自己的网页标题</td></tr></tbody></table><p>** 现场练习1： **</p><p>书写我们的第一个HTML 页面。</p><ol><li><p>新建一个demo 的 TXT 文件。</p></li><li><p>里面写入刚才的HTML 骨架。</p></li><li><p>把后缀名改为 .HTML。</p></li><li><p>右击–谷歌浏览器打开。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">          键盘敲烂  月薪过万 </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol> <img src='/images/html基础/01html骨架.jpg'><p>为了便于记忆，我们请出刚才要辞职回家养猪的二师兄来帮忙， 我称之为  猪八戒记忆法</p><img src="/images/html基础/pig.png" width="500" /><h4 id="团队约定大小写"><a class="markdownIt-Anchor" href="#团队约定大小写"></a> 团队约定大小写</h4><p>HTML标签名、类名、标签属性和大部分属性值统一用小写</p><p><em>推荐：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;     </span><br><span class="line">        &lt;title&gt;我的第一个页面&lt;&#x2F;title&gt;</span><br><span class="line"> &lt;&#x2F;head&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;HEAD&gt;     </span><br><span class="line">        &lt;TITLE&gt;我的第一个页面&lt;&#x2F;TITLE&gt;</span><br><span class="line">&lt;&#x2F;HEAD&gt;</span><br></pre></td></tr></table></figure><h2 id="12-html元素标签分类"><a class="markdownIt-Anchor" href="#12-html元素标签分类"></a> 1.2 HTML元素标签分类</h2><p><strong>标签：</strong></p><p>在HTML页面中，带有“&lt; &gt;”符号的元素被称为HTML标签，如上面提到的 &lt;html&gt;、&lt;head&gt;、&lt;body&gt;都是HTML骨架结构标签。</p><p><strong>分类：</strong></p><ol><li>常规元素（双标签）</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span>&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span>   比如 <span class="tag">&lt;<span class="name">body</span>&gt;</span>  我是文字  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>该语法中“&lt;标签名&gt;”表示该标签的作用开始，一般称为“开始标签（start tag）”，“&lt;/标签名&gt;” 表示该标签的作用结束，一般称为“结束标签（end tag）”。</li><li>和开始标签相比，结束标签只是在前面加了一个关闭符“/”。</li><li>我们以后接触的基本都是双标签</li></ul><ol start="2"><li>空元素（单标签）</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> /&gt;</span>  比如  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>空元素 用单标签来表示， 简单点说，就是里面不需要包含内容， 只有一个开始标签不需要关闭。</li><li>这种单身狗标签非常少，一共没多少，我们多记忆就好</li></ul><h2 id="13-html标签关系"><a class="markdownIt-Anchor" href="#13-html标签关系"></a> 1.3 HTML标签关系</h2><p>主要针对于<strong>双标签</strong> 的相互关系分为两种：  请大家务必熟悉记住这种标签关系，因为后面我们标签嵌套特别多，很容易弄混他们的关系。</p><ol><li>嵌套关系</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> <span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/images/html基础/father.jpg"><p>2.并列关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/images/html基础/xiong.jpg" width="500"><p><strong>倡议：</strong></p><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位（一个tab是4个空格）。如果是并列关系，最好上下对齐。</span><br></pre></td></tr></table></figure></blockquote><h1 id="2-代码开发工具书写代码"><a class="markdownIt-Anchor" href="#2-代码开发工具书写代码"></a> 2. 代码开发工具（书写代码）</h1><ul><li><p>为了提高我们的开发效率</p></li><li><p>减少代码的出错我们不提倡用记事本开发，我们有更好的犀利哥。</p><img src="/images/html基础/s.png" /></li><li><p>Dreamweaver</p></li><li><p>SublimeText</p></li><li><p>WebStorm</p></li><li><p>HBuilder</p></li><li><p>VScode</p></li></ul><p>有人说：</p><p>普通青年    Dreamweaver</p><p>文艺青年    sublime</p><p>高手和傻子  用记事本</p><p>其实。。。。</p>  <img src="/images/html基础/node.png" /><p>感觉： 这个feel 倍儿爽 feel feel倍儿爽 爽爽爽爽！</p> <img src="/images/html基础/shuang.gif" /><p>sublime有非常多的优点， 最开心的就是非常轻量级，打开速度超快，后面更高的功能，后面再接触。</p><p><strong>sublime生成html骨架小技巧</strong></p><ul><li>双击打开软件</li><li>新建文件（ctrl+n）</li><li>保存（ctrl+s）,保存为：文件名.html （ 注意 后缀名必须是 .html )</li><li>放大缩小代码  ctrl+ 加号 键     和 ctrl +   减号键     或者 按住 ctrl  在 滚动鼠标滚轮</li><li>生成页面骨架结构<ul><li>html: 5    按下tab键    或者</li><li>!    按下tab键</li></ul></li><li>在浏览器中预览页面<ul><li>右键在  浏览器中打开</li></ul></li></ul><h1 id="3-文档类型doctype"><a class="markdownIt-Anchor" href="#3-文档类型doctype"></a> 3. 文档类型&lt;!DOCTYPE&gt;</h1><p>同学你用啥手机？你咋回答？</p><p><strong>用法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>作用：</strong></p><!DOCTYPE> 声明位于文档中的最前面的位置，处于 <html> 标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。<p>**注意：  **</p><p>一些老网站可能用的还是老版本的文档类型比如 XHTML之类的，但是我们学的是HTML5,而且HTML5的文档类型兼容很好(向下兼容的原则)，所以大家放心的使用HTML5的文档类型就好了。</p><p><strong>团队约定：</strong></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明</span><br></pre></td></tr></table></figure></blockquote><h1 id="4-页面语言lang"><a class="markdownIt-Anchor" href="#4-页面语言lang"></a> 4. 页面语言lang</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>  指定html 语言种类</span><br></pre></td></tr></table></figure><p>最常见的2个：</p><ol><li><code>en</code>定义语言为英语</li><li><code>zh-CN</code>定义语言为中文</li></ol><p><strong>团队约定：</strong></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">考虑浏览器和操作系统的兼容性，目前仍然使用 zh-CN 属性值</span><br></pre></td></tr></table></figure></blockquote><p><strong>@拓展阅读：</strong></p><p>简单来说，可能对于程序来说没有太大的作用，但是它可以告诉浏览器，搜索引擎，一些处理Html的程序对页面语言内容来做一些对应的处理或者事情。<br />比如可以</p><ul><li>根据根据lang属性来设定不同语言的css样式，或者字体</li><li>告诉搜索引擎做精确的识别</li><li>让语法检查程序做语言识别</li><li>帮助翻译工具做识别</li><li>帮助网页阅读程序做识别<br />等等</li></ul><h1 id="5-字符集"><a class="markdownIt-Anchor" href="#5-字符集"></a> 5. 字符集</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">字符集(Character set)是多个字符的集合。</span><br><span class="line"></span><br><span class="line">计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。</span><br></pre></td></tr></table></figure><p>utf-8是目前最常用的字符集编码方式，常用的字符集编码方式还有gbk和gb2312。</p><ul><li>gb2312 简单中文  包括6763个汉字</li><li>BIG5   繁体中文 港澳台等用</li><li>GBK包含全部中文字符    是GB2312的扩展，加入对繁体字的支持，兼容GB2312</li><li>UTF-8则基本包含全世界所有国家需要用到的字符</li><li><strong>这句代码非常关键， 是必须要写的代码，否则可能引起乱码的情况。</strong></li></ul><p><strong>团队约定：</strong></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一般情况下统一使用 &quot;UTF-8&quot; 编码, 请尽量统一写成标准的 &quot;UTF-8&quot;，不要写成 &quot;utf-8&quot; 或 &quot;utf8&quot; 或 &quot;UTF8&quot;。</span><br></pre></td></tr></table></figure></blockquote><h1 id="6-html标签的语义化"><a class="markdownIt-Anchor" href="#6-html标签的语义化"></a> 6. HTML标签的语义化</h1><p>白话： 所谓标签语义化，就是指标签的含义。</p><ol><li>方便代码的阅读和维护</li><li>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容</li><li>使用语义化标签会具有更好地搜索引擎优化</li></ol><img src="/images/html基础/02语义化.jpg"><p>语义是否良好： 当我们去掉CSS之后，网页结构依然组织有序，并且有良好的可读性。(  裸奔起来一样好看 )</p><p>遵循的原则：先确定语义的HTML ，再选合适的CSS。所以，<strong>我们接下来学习html标签，要根据语义去记忆。</strong> HTML网页中任何元素的实现都要依靠HTML标签。</p><h1 id="7-拓展阅读"><a class="markdownIt-Anchor" href="#7-拓展阅读"></a> 7. 拓展阅读@</h1><h2 id="单身狗的由来"><a class="markdownIt-Anchor" href="#单身狗的由来"></a> 单身狗的由来</h2><p>单身狗一词最早是出自网络社区，起源与大话西游有关。</p><p>大话西游之大圣娶亲最后一幕“他好像一条狗”由来。</p> <img src="/images/html基础/dog.jpg"> <img src="/images/html基础/dog2.jpg"> <img src="/images/html基础/dog3.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-html-初识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-html-初识&quot;&gt;&lt;/a&gt; 1. HTML 初识&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;HTML 指的是超文本标记语言 (&lt;strong&gt;H&lt;/strong&gt;yper &lt;str
      
    
    </summary>
    
    
      <category term="html基础" scheme="http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>认识WEB</title>
    <link href="http://yoursite.com/2018/01/08/01-%E5%89%8D%E8%A8%80&amp;WEB%E6%A0%87%E5%87%86/"/>
    <id>http://yoursite.com/2018/01/08/01-%E5%89%8D%E8%A8%80&amp;WEB%E6%A0%87%E5%87%86/</id>
    <published>2018-01-08T08:36:49.000Z</published>
    <updated>2018-01-08T09:11:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="认识web"><a class="markdownIt-Anchor" href="#认识web"></a> 认识WEB</h1><h2 id="1-认识网页"><a class="markdownIt-Anchor" href="#1-认识网页"></a> 1. 认识网页</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网页主要由文字、图像和超链接等元素构成。当然，除了这些元素，网页中还可以包含音频、视频以及Flash等。</span><br></pre></td></tr></table></figure><img src="/images/html基础/mi.png" alt=""/><p><strong>思考：</strong></p><p>网页是如何形成的呢?</p><img src="/images/html基础/web.png" /><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>网页有图片、链接、文字等元素组成，我们后面的任务就是要把这部分网页元素用代码写出来。。。</p><h2 id="2-浏览器显示代码"><a class="markdownIt-Anchor" href="#2-浏览器显示代码"></a> 2. 浏览器（显示代码）</h2><p>平时我们浏览网页，是在浏览器地址栏中输入网页地址，就可以访问我们的页面了。你的浏览器呢？</p><img src="/images/html基础/add.png" ><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器是网页显示、运行的平台，常用的浏览器有IE、火狐（Firefox）、谷歌（Chrome）、Safari和Opera等。我们平时称为五大浏览器。</span><br></pre></td></tr></table></figure><img src="/images/html基础/b.png" /><p>可能你最熟悉的是 IE浏览器，但是。。。</p><img src="/images/html基础/liulan.jpg" ><h3 id="21-查看浏览器占有的市场份额"><a class="markdownIt-Anchor" href="#21-查看浏览器占有的市场份额"></a> 2.1 查看浏览器占有的市场份额</h3><p>查看网站： <a href="http://tongji.baidu.com/data/browser" target="_blank">http://tongji.baidu.com/data/browser</a></p><img src="/images/html基础/count.png" /><p>2008年，大名鼎鼎的互联网巨头Google公司发布了它的首款浏览器Chrome浏览器。</p><p>跟王思聪一样，没办法，生下来人家就是富二代官二代啊，后台太强，而且确实先天能力得天独厚。</p><h3 id="22-常见浏览器内核了解"><a class="markdownIt-Anchor" href="#22-常见浏览器内核了解"></a> 2.2 常见浏览器内核（了解）</h3><p>首先解释一下浏览器内核是什么东西。英文叫做：Rendering Engine，中文翻译很多，排版引擎、解释引擎、渲染引擎，现在流行称为浏览器内核.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">负责读取网页内容，整理讯息，计算网页的显示方式并显示页面.</span><br></pre></td></tr></table></figure><p>因为浏览器太多啦， 但是现在主要流行的就是下面几个：</p><table><thead><tr><th style="text-align:left">浏览器</th><th style="text-align:center">内核</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">IE</td><td style="text-align:center">Trident</td><td style="text-align:left">IE、猎豹安全、360极速浏览器、百度浏览器</td></tr><tr><td style="text-align:left">firefox</td><td style="text-align:center">Gecko</td><td style="text-align:left">可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。</td></tr><tr><td style="text-align:left">Safari</td><td style="text-align:center">webkit</td><td style="text-align:left">现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕再厕所里面了。</td></tr><tr><td style="text-align:left">chrome</td><td style="text-align:center">Chromium/Blink</td><td style="text-align:left">在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink内核。二次开发</td></tr><tr><td style="text-align:left">Opera</td><td style="text-align:center">Presto</td><td style="text-align:left">Presto（已经废弃） 是挪威产浏览器 opera 的 “前任” 内核，为何说是 “前任”，因为最新的 opera 浏览器早已将之抛弃从而投入到了谷歌怀抱了。  现在用blink内核。</td></tr></tbody></table><p><strong>拓展阅读：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">移动端的浏览器内核主要说的是系统内置浏览器的内核。</span><br><span class="line"></span><br><span class="line">Android手机而言，使用率最高的就是Webkit内核，大部分国产浏览器宣称的自己的内核，基本上也是属于webkit二次开发。</span><br><span class="line"></span><br><span class="line">iOS以及WP7平台上，由于系统原因，系统大部分自带浏览器内核，一般是Safari或者IE内核Trident的</span><br></pre></td></tr></table></figure><h2 id="3-web标准重点"><a class="markdownIt-Anchor" href="#3-web标准重点"></a> 3. Web标准（重点）</h2><p>目标</p><ul><li>记忆<ul><li>能说出网页 中 web 标准三层组成</li></ul></li><li>理解<ul><li>能结合人来表述web标准三层</li></ul></li></ul><p>Web标准不是某一个标准，而是由W3C组织和其他标准化组织制定的一系列标准的集合。</p><p>W3C 万维网联盟是国际最著名的标准化组织。1994年成立后，至今已发布近百项相关万维网的标准，对万维网发展做出了杰出的贡献。</p><p><strong>w3c就类似于现实世界中的联合国。</strong></p><h3 id="31-为什么要遵循web标准呢"><a class="markdownIt-Anchor" href="#31-为什么要遵循web标准呢"></a> 3.1 为什么要遵循WEB标准呢？</h3><p>通过以上浏览器的内核不同，我们知道他们渲染或者排版的模式就有些许差异，显示就会有差别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">问：  哪个方言再全国基本都可以听得懂？</span><br></pre></td></tr></table></figure><img src="/images/html基础/bz.png" /><h3 id="32-web-标准的好处"><a class="markdownIt-Anchor" href="#32-web-标准的好处"></a> 3.2 Web 标准的好处</h3><p><em>1</em>、让Web的发展前景更广阔<br /><em>2</em>、内容能被更广泛的设备访问<br /><em>3</em>、更容易被搜寻引擎搜索<br /><em>4</em>、降低网站流量费用<br /><em>5</em>、使网站更易于维护<br /><em>6</em>、提高页面浏览速度</p><p>专业的人做专业的事。  来呀<sub>快活呀</sub>反正有大把时间~</p><h3 id="33-web-标准构成"><a class="markdownIt-Anchor" href="#33-web-标准构成"></a> 3.3 Web 标准构成</h3><p><strong>构成：</strong> 主要包括结构（Structure）、表现（Presentation）和行为（Behavior）三个方面。</p><ul><li><p>结构标准：结构用于对网页元素进行整理和分类，咱们主要学的是HTML。 对于网页来说最重要的一部分</p></li><li><p>表现标准：表现用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS</p></li><li><p>行为标准：行为是指网页模型的定义及交互的编写，咱们主要学的是 Javascript</p></li></ul><p>理想状态我们的源码： .HTML      .css      .js</p><p>直观感受：</p><img src="/images/html基础/gx.png" /><p>总结WEB标准：</p><p>结构标准：   <img src="/images/html基础/hb1.png" width="300" />  决定你是否有个好天然身体</p><p><strong>结构层：通过对语义的分析，可以对其划分结构。具有了结构的内容，将更容易阅读</strong></p> <img src='/images/html基础/htmll.jpg' /><p>表现标准：   <img src="/images/html基础/hb2.png" width="300" />  决定你是否打扮的美丽外观</p><p><strong>表现层：是为了让网页就能展现出灵活多样的显示效果</strong></p> <img src='/images/html基础/css.jpg' /><p>行为标准：   <img src="/images/html基础/hb3.jpg"  width="420"   />  决定你是否有吸引人的行为</p><p><strong>行为层：用户对网页进行操作，网页可以做出响应性的变化。</strong></p>  <img src='/images/html基础/search.gif' /><h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3><ul><li>web标准有三层结构，分别是结构（html）、表现（css）和行为（javascript）</li><li>结构类似人的身体， 表现类似人的着装， 行为类似人的行为动作</li><li>理想状态下，他们三层都是独立的， 放到不同的文件里面</li></ul><h2 id="4-拓展"><a class="markdownIt-Anchor" href="#4-拓展"></a> 4. 拓展@</h2><ul><li><p><strong>介绍一下你对浏览器内核的理解？常见的浏览器内核有哪些？</strong></p><p>浏览器内核包括两部分，渲染引擎和js引擎。渲染引擎负责读取网页内容，整理讯息，计算网页的显示方式并显示页面，js引擎是解析执行js获取网页的动态效果。 后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。<br />IE：Trident<br />firefox：Gecko<br />chrom、safari：webkit<br />Opera：Presto<br />Microsoft Edge：EdgeHTML</p><p>深度阅读：<a href="http://blog.csdn.net/summer_15/article/details/71249203" target="_blank" rel="noopener">五大主流浏览器内核的源起以及国内各大浏览器内核总结</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;认识web&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#认识web&quot;&gt;&lt;/a&gt; 认识WEB&lt;/h1&gt;
&lt;h2 id=&quot;1-认识网页&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-认识网页&quot;&gt;&lt;/a&gt; 1
      
    
    </summary>
    
    
      <category term="html基础" scheme="http://yoursite.com/categories/html%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
</feed>
